<application>
  <component name="AppStorage">
    <histories>
      <item value="External" />
      <item value="cannot find symbol" />
      <item value="for-each not applicable to expression type" />
      <item value="peek" />
      <item value="得分" />
      <item value="Enable or disable pan gesture detection. Disabling pan causes the image to be centered. Pan * can still be changed from code." />
      <item value="State change originated from a double tap zoom anim." />
      <item value="State change originated from animation." />
      <item value="Scale the image so that both dimensions of the image will be equal to or larger than the corresponding dimension of the view. The top left is shown." />
      <item value="Scale the image so that both dimensions of the image will be equal to or less than the maxScale and equal to or larger than minScale. The image is then centered in the view." />
      <item value="Scale the image uniformly so that both dimensions of the image will be equal to or larger than the corresponding dimension of the view. The image is then centered in the view." />
      <item value="Scale the image so that both dimensions of the image will be equal to or less than the corresponding dimension of the view. The image is then centered in the view. This is the default behaviour and best for galleries." />
      <item value="Allows the image to be panned until a corner reaches the center of the screen but no further. Useful when you want to pan any spot on the image to the exact center of the screen." />
      <item value="Don't allow the image to be panned off screen. As much of the image as possible is always displayed, centered in the view when it is smaller. This is the best option for galleries." />
      <item value="Allows the image to be panned until it is just off screen, but no further. The edge of the image will stop when it is flush with the screen edge. */ public static final int PAN_LIMIT_OUTSIDE = 2;" />
      <item value="Quadratic ease out. Not recommended for scale animation, but good for panning. */" />
      <item value="Zoom in to and center the tapped point immediately without animating. */" />
      <item value="During zoom animation, keep the point of the image that was tapped in the same place, and scale the image around it. */" />
      <item value="CROP" />
      <item value="INSIDE" />
      <item value="Source image pixel density at minimum zoom." />
      <item value="This is a screen density aware alternative to {@link #setMinScale(float)}; it allows you to express the minimum * allowed scale in terms of the maximum pixel density." />
      <item value="Externally change the scale and translation of the source image. This may be used with getCenter() and getScale() * to restore the scale and zoom after a screen rotate." />
      <item value="Enable tiling of the image. This does not apply to preview images which are always loaded as a single bitmap., * and tiling cannot be disabled when displaying a region of the source image." />
      <item value="Enable or disable tiling of the image. This does not apply to preview images which are always loaded as a single bitmap, * and tiling cannot be disabled when displaying a region of the source image." />
      <item value="tiling" />
      <item value="Use a region of the source image. Region must be set independently for the full size image and the preview if * you are using one." />
      <item value="Declare the dimensions of the image. This is only required for a full size image, when you are specifying a URI * and also a preview image. When displaying a bitmap object, or not using a preview, you do not need to declare * the image dimensions. Note if the declared dimensions are found to be incorrect, the view will reset." />
      <item value="Provide a loaded and cached bitmap for display. This bitmap will not be recycled when it is no * longer needed. Use this method if you loaded the bitmap with an image loader such as Picasso * or Volley." />
      <item value="周六" />
      <item value="生成" />
      <item value="The x coordinate of the first pixel in source" />
      <item value="The number of pixels in each row" />
      <item value="The new bitmap's desired height." />
      <item value="Whether or not bilinear filtering should be used when scaling the * bitmap. If this is true then bilinear filtering will be used when * scaling which has better image quality at the cost of worse performance. * If this is false then nearest-neighbor scaling is used instead which * will have worse image quality but is faster. Recommended default * is to set filter to 'true' as the cost of bilinear filtering is * typically minimal and the improved image quality is significant." />
      <item value="You must call removeView() on the child's parent first." />
      <item value="Unchecked call to 'onBindViewHolder(VH, int)' as a member of raw type 'androidx.recyclerview.widget.RecyclerView.Adapter' " />
      <item value="footer" />
      <item value="Tests if this input stream supports the &lt;code&gt;mark&lt;/code&gt; and * &lt;code&gt;reset&lt;/code&gt; methods. Whether or not &lt;code&gt;mark&lt;/code&gt; and * &lt;code&gt;reset&lt;/code&gt; are supported is an invariant property of a * particular input stream instance. The &lt;code&gt;markSupported&lt;/code&gt; method * of &lt;code&gt;InputStream&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;." />
      <item value="if the image format is not supported or can not be decoded." />
      <item value="If this is true, then the BitmapRegionDecoder may keep a * shallow reference to the input. If this is false, * then the BitmapRegionDecoder will explicitly make a copy of the * input data, and keep that. Even if sharing is allowed, * the implementation may still decide to make a deep * copy of the input data. If an image is progressively encoded, * allowing sharing may degrade the decoding speed." />
      <item value="This configuration may be useful when using opaque bitmaps * that do not require high color fidelity. *" />
      <item value="This configuration can produce slight visual artifacts depending * on the configuration of the source. For instance, without * dithering, the result might show a greenish tint. To get better * results dithering should be applied." />
      <item value="Each pixel is stored on 2 bytes and only the RGB channels are * encoded: red is stored with 5 bits of precision (32 possible * values), green is stored with 6 bits of precision (64 possible * values) and blue is stored with 5 bits of precision." />
      <item value="Image format not supported" />
      <item value="the size of the measure specification" />
      <item value="Corner" />
      <item value="大于" />
      <item value="The y-radius of the oval used to round the corners" />
      <item value="The x-radius of the oval used to round the corners" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="723" />
        <entry key="ENGLISH" value="724" />
        <entry key="FRENCH" value="1" />
        <entry key="KOREAN" value="92" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="JAPANESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>