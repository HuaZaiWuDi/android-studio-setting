<application>
  <component name="AppStorage">
    <histories>
      <item value="Pads the string to the specified [length] at the beginning with the specified character or space." />
      <item value="Returns a sub sequence of this char sequence having leading and trailing characters matching the [predicate] removed." />
      <item value="Returns a string having leading and trailing characters matching the [predicate] removed." />
      <item value="Returns a string having leading and trailing whitespace removed." />
      <item value="handle" />
      <item value="处理" />
      <item value="lg my guard state push" />
      <item value="Dispatch" />
      <item value="代理" />
      <item value="magnet" />
      <item value="预设" />
      <item value="recipient" />
      <item value="Specifies that this view should permit nested scrolling within a compatible ancestor view" />
      <item value="Maps the upstream items into {@link SingleSource}s and switches (subscribes) to the newer ones * while disposing the older ones (and ignoring their signals) and emits the latest success value of the current one, * delaying errors from this {@code Flowable} or the inner {@code SingleSource}s until all terminate." />
      <item value="Instructs a Publisher to pass control to another Publisher rather than invoking" />
      <item value="detection" />
      <item value="PORTRAIT" />
      <item value="summarize" />
      <item value="韩语" />
      <item value="marquee" />
      <item value="Creates a new [LiveData] object does not emit a value until the source `this` LiveData value * has been changed. The value is considered changed if `equals()` yields `false`." />
      <item value="Token has expired" />
      <item value="motion" />
      <item value="Returns a singleton instance of a never-signalling Single (only calls onSubscribe)." />
      <item value="privacy protection in progress" />
      <item value="mdtrigger" />
      <item value="Groups elements of the original collection by the key returned by the given [keySelector] function * applied to each element and returns a map where each group key is associated with a list of corresponding elements." />
      <item value="For example, if you had the date-time of 28 Mar 2002 * 13:45:01.231, if you passed with HOUR, it would return 28 Mar * 2002 13:00:00.000. If this was passed with MONTH, it would * return 1 Mar 2002 0:00:00.000." />
      <item value="Truncates a date, leaving the field specified as the most * significant field." />
      <item value="Determines if two calendars are equal up to no more than the specified * most significant field." />
      <item value="Parses a string representing a date by trying a variety of different parsers." />
      <item value="&gt;Rounds a date, leaving the field specified as the most * significant field.&lt;" />
      <item value="the different rounded date, not null" />
      <item value="number of days within the fragment of date" />
      <item value="Gets a Calendar fragment for any unit." />
      <item value="number of units within the fragment of the calendar" />
      <item value="Checks if two date objects represent the same instant in time.&lt;/p&gt;" />
      <item value="The default implementation of this method returns 0, making the assumption of * a single view type for the adapter. Unlike ListView adapters, types need not * be contiguous. Consider using id resources to uniquely identify item view types." />
      <item value="Return the view type of the item at &lt;code&gt;position&lt;/code&gt; for the purposes * of view recycling." />
      <item value="Returns a hash code value for the object. The general contract of `hashCode` is:" />
      <item value="Enumeration of the style of text formatting and parsing." />
      <item value="MAGNET" />
      <item value="Motion Detected" />
      <item value="昨天" />
      <item value="Adds or subtracts the specified amount of time to the given calendar field, * based on the calendar's rules. For example, to subtract 5 days from * the current time of the calendar, you can achieve it by calling:" />
      <item value="access" />
      <item value="The notification starts the callback and loads more */" />
      <item value="Continuous" />
      <item value="Timer" />
      <item value="timer" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="306" />
        <entry key="ENGLISH" value="307" />
        <entry key="FRENCH" value="4" />
        <entry key="CATALAN" value="1" />
        <entry key="ZULU" value="1" />
        <entry key="JAPANESE" value="2" />
        <entry key="ITALIAN" value="1" />
        <entry key="VIETNAMESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>