<application>
  <component name="AppStorage">
    <histories>
      <item value="Returns true if this zone has the same rule and offset as another zone. * That is, if this zone differs only in ID, if at all. Returns false * if the other zone is null." />
      <item value="South Korea" />
      <item value="unsubscribe On" />
      <item value="observe On" />
      <item value="subscribe On" />
      <item value="confirm" />
      <item value="Chain of Causes for CompositeException In Order Received" />
      <item value="Due to insufficient storage space in U + box, the oldest videos will be automatically deleted before new videos are saved." />
      <item value="resolve" />
      <item value="경기도 광주시 직동경기도 광주시 직동경기도 광주시 직동경기도 광주시 직동경기도 광주시 직동경기도 광주시 직동경기도 광주시 직동경기도 광주시 직동" />
      <item value="detect" />
      <item value="on Arrival" />
      <item value="PROP alarm bell volume" />
      <item value="sensors Analytics" />
      <item value="Set special flags controlling how this intent is handled. Most values * here depend on the type of component being executed by the Intent, * specifically the FLAG_ACTIVITY_* flags are all for use with * {@link Context#startActivity Context.startActivity()} and the * FLAG_RECEIVER_* flags are all for use with * {@link Context#sendBroadcast(Intent) Context.sendBroadcast()}." />
      <item value="If set, the activity will not be launched if it is already running * at the top of the history stack." />
      <item value="If set in an Intent passed to {@link Context#startActivity Context.startActivity()}, * this flag will cause any existing task that would be associated with the * activity to be cleared before the activity is started. That is, the activity * becomes the new root of an otherwise empty task, and any old activities * are finished. This can only be used in conjunction with {@link #FLAG_ACTIVITY_NEW_TASK}." />
      <item value="If set, and the activity being launched is already running in the * current task, then instead of launching a new instance of that activity, * all of the other activities on top of it will be closed and this Intent * will be delivered to the (now on top) old activity as a new Intent." />
      <item value="* * Consistent: for any non-null values `x` and `y`, multiple invocations of `x.equals(y)` consistently return true or consistently return false, provided no information used in `equals` comparisons on the objects is modified." />
      <item value="Symmetric: for any non-null values `x` and `y`, `x.equals(y)` should return true if and only if `y.equals(x)` returns true" />
      <item value="Symmetric: for any non-null values `x` and `y`, `x.equals(y)` should return true if and only if `y.equals(x)` returns true." />
      <item value="Reflexive: for any non-null value `x`, `x.equals(x)` should return true." />
      <item value="Reflexive: for any non-null value `x`, `x.equals(x)` should return true. * * Symmetric: for any non-null values `x` and `y`, `x.equals(y)` should return true if and only if `y.equals(x)` returns true. * * Transitive: for any non-null values `x`, `y`, and `z`, if `x.equals(y)` returns true and `y.equals(z)` returns true, then `x.equals(z)` should return true. * * Consistent: for any non-null values `x` and `y`, multiple invocations of `x.equals(y)` consistently return true or consistently return false, provided no information used in `equals` comparisons on the objects is modified. * * Never equal to null: for any non-null value `x`, `x.equals(null)` should return false." />
      <item value="Indicates whether some other object is &quot;equal to&quot; this one. Implementations must fulfil the following * requirements:" />
      <item value="Flag indicating whether this window requests a translucent navigation bar. Corresponds to {@link android.view.WindowManager.LayoutParams#FLAG_TRANSLUCENT_NAVIGATION}." />
      <item value="Extracts the phone number from an Intent." />
      <item value="Returns the phone number string for line 1, for example, the MSISDN * for a GSM phone. Return null if it is unavailable." />
      <item value="Denied" />
      <item value="cannot be activated due to disconnected network." />
      <item value="Returns a Single that emits the single item emitted by the source Publisher, if that Publisher * emits only a single item, or a default item if the source Publisher emits no items. If the source * Publisher emits more than one item, an {@code IllegalArgumentException} is signaled instead." />
      <item value="when setData is called, we set the pending data and actual data swap happens on the main" />
      <item value="Mutable" />
      <item value="Note that only one observer is going to be notified of changes." />
      <item value="This avoids a common problem with events: on configuration change (like rotation) an update * can be emitted if the observer is active. This LiveData only calls the observable if there's an * explicit call to setValue() or call()." />
      <item value="A lifecycle-aware observable that sends only new updates after subscription, used for events like * navigation and Snackbar messages." />
      <item value="Nulls out references to the upstream producer and downstream SingleObserver if * the sequence is terminated or downstream calls dispose()." />
      <item value="Detach" />
      <item value="Terminate" />
      <item value="ATTR CAMERA MDRIGGER detect" />
      <item value="Unit defined in com.lumi.commonui.cell.CommonCell" />
      <item value="forever" />
      <item value="Optimze" />
      <item value="Returns `true` if this char sequence is empty (contains no characters)." />
      <item value="Returns `true` if this nullable char sequence is either `null` or empty or consists solely of whitespace characters." />
      <item value="none" />
      <item value="Returns `true` if no elements match the given [predicate]." />
      <item value="IFTTT My Guard Action Bean" />
      <item value="Gets the current value of the default locale for this instance * of the Java Virtual Machine." />
      <item value="KOREAN" />
      <item value="All security devices of CCTV G2 have been deleted so that Myguard cannot be activated." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="378" />
        <entry key="ENGLISH" value="379" />
        <entry key="FRENCH" value="4" />
        <entry key="CATALAN" value="1" />
        <entry key="ZULU" value="1" />
        <entry key="JAPANESE" value="2" />
        <entry key="ITALIAN" value="1" />
        <entry key="VIETNAMESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>