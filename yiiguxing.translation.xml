<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="373" />
    <option name="newTranslationDialogX" value="572" />
    <option name="newTranslationDialogY" value="129" />
    <histories>
      <item value="Inserts an element into the list at the specified index." />
      <item value="Environment.get External Storage Directory().can Write()" />
      <item value="Storage state if the media is present and mounted at its mount point with readwrite access. See Also: getExternalStorageState(File)" />
      <item value="File Not Found Exception" />
      <item value="Blocking inter process call that enables the DisplayLeakActivity. When you first install the app, DisplayLeakActivity is disabled by default and will only be enabled once a potential leak has been found and the analysis starts. You can call this method to enable DisplayLeakActivity before any potential leak has been detected." />
      <item value="Creates a RefWatcher that works out of the box, and starts watching activity references (on ICS+)" />
      <item value="Whether to stop monitoring when in debug mode. Returns: true if stop, false otherwise" />
      <item value="Block interceptor, developer may provide their own actions." />
      <item value="Whether to delete files whose stack is in white list, used with white-list. Returns: true if delete, false it not." />
      <item value="Filter stack without any in concern package, used with @{code concernPackages}. Returns: true if filter, false it not." />
      <item value="Packages that developer concern, by default it uses process name, put high priority one in pre-order. Returns: null if simply concern only package with process name." />
      <item value="Implement in your project, bundled log files. Params: zippedFile – zipped file" />
      <item value="Implement in your project, bundle files into a zip file. Params: src – files before compress dest – files compressed Returns: true if compression is successful" />
      <item value="Thread stack dump interval, use when block happens, BlockCanary will dump on main thread stack according to current sample cycle. Because the implementation mechanism of Looper, real dump interval would be longer than the period specified here (especially when cpu is busier). Returns: dump interval (in millis)" />
      <item value="Config monitor duration, after this time BlockCanary will stop, use with BlockCanary's isMonitorDurationEnd Returns: monitor last duration (in hour)" />
      <item value="Config block threshold (in millis), dispatch over this duration is regarded as a BLOCK. You may set it from performance of device. Returns: threshold in mills" />
      <item value="Network type Returns: String like 2G, 3G, 4G, wifi, etc." />
      <item value="Implement in your project. Returns: user id" />
      <item value="Implement in your project. Returns: Qualifier which can specify this installation, like version + flavor." />
      <item value="1 exception was raised by workers" />
      <item value="provide Block Threshold" />
      <item value="provide Monitor Duration" />
      <item value="provide Qualifier" />
      <item value="Creates a centered bitmap of the desired size. Params: source – original bitmap source width – targeted width height – targeted height options – options used during thumbnail extraction" />
      <item value="Set the number of pages that should be retained to either side of the currently visible page(s). Pages beyond this limit will be recreated from the adapter when needed. Set this to OFFSCREEN_PAGE_LIMIT_DEFAULT to use RecyclerView's caching strategy. The given value must either be larger than 0, or OFFSCREEN_PAGE_LIMIT_DEFAULT. Pages within limit pages away from the current page are created and added to the view hierarchy, even though they are not visible on the screen. Pages outside this limit will be removed from the view hierarchy, but the ViewHolders will be recycled as usual by RecyclerView. This is offered as an optimization. If you know in advance the number of pages you will need to support or have lazy-loading mechanisms in place on your pages, tweaking this setting can have benefits in perceived smoothness of paging animations and interaction. If you have a small number of pages (3-4) that you can keep active all at once, less time will be spent in layout for newly created view subtrees as the user pages back and forth. You should keep this limit low, especially if your pages have complex layouts. By default it is set to OFFSCREEN_PAGE_LIMIT_DEFAULT. Params: limit – How many pages will be kept offscreen on either side. Valid values are all values &gt;= 1 and OFFSCREEN_PAGE_LIMIT_DEFAULT Throws:" />
      <item value="point In View" />
      <item value="Inconsistency detected. Invalid view holder adapter" />
      <item value="end Inclusive" />
      <item value="Gets the current value of the default locale for this instance of the Java Virtual Machine. The Java Virtual Machine sets the default locale during startup based on the host environment. It is used by many locale-sensitive methods if no locale is explicitly specified. It can be changed using the setDefault method. Returns: the default locale for this instance of the Java Virtual Machine" />
      <item value="Define the tileable drawable used to draw the progress bar in progress mode. If the drawable is a BitmapDrawable or contains BitmapDrawables, a tiled copy will be generated for display as a progress bar." />
      <item value="Returns the drawable currently used to draw the progress bar. This will be either getProgressDrawable() or getIndeterminateDrawable() depending on whether the progress bar is in determinate or indeterminate mode. Returns: the drawable currently used to draw the progress bar" />
      <item value="Outside the framework, instead of accessing this directly, please use getCurrentDrawable(), setProgressDrawable(Drawable), setIndeterminateDrawable(Drawable) and their tiled versions." />
      <item value="pecifies the hotspot's location within the drawable. Params: x – The X coordinate of the center of the hotspot y – The Y coordinate of the center of the hotspot" />
      <item value="drawable Hotspot Changed" />
      <item value="draw Tick Marks" />
      <item value="allow Root Fragment Anim" />
      <item value="distinct By" />
      <item value="Roller Shade" />
      <item value="Called when a view created by this holder has been attached to a window. simple to solve item will layout using all setFullSpan Params: holder -" />
      <item value="This is a function of current event -&gt; target disposal event. That is to say that if event &quot;Attach&quot; returns &quot;Detach&quot;, then any stream subscribed to during Attach will autodispose on Detach." />
      <item value="Destroyed state for a LifecycleOwner. After this event, this Lifecycle will not dispatch any more events. For instance, for an android.app.Activity, this state is reached right before Activity's onDestroy call." />
      <item value="Sets the current state and notifies the observers. Note that if the currentState is the same state as the last call to this method, calling this method has no effect. Params: event – The event that was received" />
      <item value="Dispatch a window visibility change down the view hierarchy. ViewGroups should override to route to their children. Params: visibility – The new visibility of the window. See Also: onWindowVisibilityChanged(int)" />
      <item value="Called when the window containing has change its visibility (between GONE, INVISIBLE, and VISIBLE). Note that this tells you whether or not your window is being made visible to the window manager; this does not tell you whether or not your window is obscured by other windows on the screen, even if it is itself visible. Params: visibility – The new visibility of the window." />
      <item value="The specified message queue synchronization barrier token has not been posted or has already been removed." />
      <item value="T Current PLAYBACK STATE" />
      <item value="set Shadow Color" />
      <item value="set Scrim Color" />
      <item value="Inconsistency detected" />
      <item value="圆角" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2405" />
        <entry key="ENGLISH" value="2406" />
        <entry key="CHINESE_TRADITIONAL" value="6" />
        <entry key="BASQUE" value="1" />
        <entry key="RUSSIAN" value="4" />
        <entry key="FRENCH" value="2" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="KOREAN" value="11" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="SPANISH" value="3" />
        <entry key="ITALIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1656578205222" />
  </component>
</application>