<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="373" />
    <option name="newTranslationDialogX" value="352" />
    <option name="newTranslationDialogY" value="457" />
    <histories>
      <item value="Returns the maximum height that is available for the popup to be completely shown. It is recommended that this height be the maximum for the popup's height, otherwise it is possible that the popup will be clipped." />
      <item value="drying_clothe" />
      <item value="drying_clothes" />
      <item value="drying_clothes_guide_page" />
      <item value="trip-setup-guidedrying_clothes_guide_page" />
      <item value="trip-setup-guide" />
      <item value="The RecyclerView is not currently scrolling." />
      <item value="Edge" />
      <item value="Edge Effec" />
      <item value="displacement – The displacement from the starting side of the effect of the point initiating the pull. In the case of touch this is the finger position. Values may be from 0-1." />
      <item value="deltaDistance – Change in distance since the last call. Values may be 0 (no change) to 1.f (full length of the view) or negative values to express change back toward the edge reached to initiate the effect." />
      <item value="The displacement from the starting side of the effect of the point initiating the pull. In the case of touch this is the finger position. Values may be from 0-1." />
      <item value="Change in distance since the last call. Values may be 0 (no change) to 1.f (full length of the view) or negative values to express change back toward the edge" />
      <item value="deltaDistance – Change in distance since the last call. Values may be 0 (no change) to 1.f (full length of the view) or negative values to express change back toward the edge reached to initiate the effect. displacement – The displacement from the starting side of the effect of the point initiating the pull. In the case of touch this is the finger position. Values may be from 0-1." />
      <item value="displacement" />
      <item value="When a new {@link EdgeEffectFactory} is set, any existing over-scroll effects are cleared and new effects are created as needed using {@link EdgeEffectFactorycreateEdgeEffect(RecyclerView, int)}" />
      <item value="consider Releasing Glows On Scroll" />
      <item value="delta Distance" />
      <item value="A view should call this when content is pulled away from an edge by the user. This will update the state of the current visual effect and its associated animation. The host view should always android.view.View.invalidate() after call this method and draw the results accordingly." />
      <item value="EdgeEffectFactory lets you customize the over-scroll edge effect for RecyclerViews." />
      <item value="Set a {@link EdgeEffectFactory} for this {@link RecyclerView}." />
      <item value="Apply a pull to relevant overscroll glow effects" />
      <item value="Determines whether the event is from the given source." />
      <item value="&gt;Item decorations are ordered. Decorations placed earlier in the list will be runquerieddrawn first for their effects on item views. Padding added to views will be nested; a padding added by an earlier decoration will mean further item decorations in the list will be asked to drawpad within the previous decoration's given area." />
      <item value="Add an {@link ItemDecoration} to this RecyclerView. Item decorations can affect both measurement and drawing of individual item views." />
      <item value="Item decorations are ordered. Decorations placed earlier in the list will be runquerieddrawn first for their effects on item views. Padding added to views will be nested; a padding added by an earlier decoration will mean further item decorations in the list will be asked to drawpad within the previous decoration's given area." />
      <item value="Never show over-scroll effects." />
      <item value="Defines whether to fade out scrollbars when they are not in use" />
      <item value="Creates a new ColorStateList that has the same states and colors as this one but where each color has the specified alpha value (0-255)." />
      <item value="Performs resumeRequests() recursively for all managers that are contextually descendant to this manager based on the Activity/Fragment hierarchy. The hierarchical semantics are identical as for pauseRequestsRecursive()." />
      <item value="Create a helper object to create, open, and/or manage a database. This method always returns very quickly. The database is not actually created or opened until one of getWritableDatabase or getReadableDatabase is called." />
      <item value="Extra is canceled" />
      <item value="Duplicate" />
      <item value="Duplicate key in ArrayMap: router_fragment_target_path" />
      <item value="You've configured an invalid url : EMPTY_OR_NULL_URL" />
      <item value="Returns the current drawable being displayed in the view, or null if no such drawable exists (or one cannot be retrieved)." />
      <item value="Reverses the transition, picking up where the transition currently is. If the transition is not currently running, this will start the transition with the specified duration. If the transition is already running, the last known duration will be used. Params: duration – The duration to use if no transition is running." />
      <item value="Enables or disables the cross fade of the drawables. When cross fade is disabled, the first drawable is always drawn opaque. With cross fade enabled, the first drawable is drawn with the opposite alpha of the second drawable. Cross fade is disabled by default. Params: enabled – True to enable cross fading, false otherwise." />
      <item value="Edge of the view and inset." />
      <item value="over-scroll" />
      <item value="Returns a substring after the last occurrence of delimiter. If the string does not contain the delimiter, returns missingDelimiterValue which defaults to the original string." />
      <item value="for some reason, you may want to ignore tinkerBuild, such as instant run debug build?" />
      <item value="Resource array of dimensions to be used in conjunction with &lt;code&gt;autoSizeTextType&lt;code&gt; set to &lt;code&gt;uniform&lt;code&gt;. Overrides &lt;code&gt;autoSizeStepGranularity&lt;code&gt; if set. --&gt;" />
      <item value="The maximum text size constraint to be used when auto-sizing text." />
      <item value="uniform" />
      <item value="&#10;pivotX – The x location of the pivot point." />
      <item value="Sets the x location of the point around which the view is rotated and scaled. By default, the pivot point is centered on the object. Setting this property disables this behavior and causes the view to use only the explicitly set pivotX and pivotY values." />
      <item value="Returns the measured width of the given child, plus the additional size of any insets applied by ItemDecorations." />
      <item value="Decorated" />
      <item value="The x location of the point around which the view is rotated and scaled." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1496" />
        <entry key="ENGLISH" value="1497" />
        <entry key="CHINESE_TRADITIONAL" value="6" />
        <entry key="RUSSIAN" value="4" />
        <entry key="FRENCH" value="2" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="KOREAN" value="11" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1648793948753" />
  </component>
</application>