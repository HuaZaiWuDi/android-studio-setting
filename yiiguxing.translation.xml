<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="373" />
    <option name="newTranslationDialogX" value="352" />
    <option name="newTranslationDialogY" value="457" />
    <histories>
      <item value="Sets the opacity of the view to a value from 0 to 1, where 0 means the view is completely transparent and 1 means the view is completely opaque.&#10;Note: setting alpha to a translucent value (0 &lt; alpha &lt; 1) can have significant performance implications, especially for large views. It is best to use the alpha property sparingly and transiently, as in the case of fading animations.&#10;For a view with a frequently changing alpha, such as during a fading animation, it is strongly recommended for performance reasons to either override hasOverlappingRendering() to return false if appropriate, or setting a layer type on the view for the duration of the animation. On versions Build.VERSION_CODES.M and below, the default path for rendering an unlayered View with alpha could add multiple milliseconds of rendering cost, even for simple or small views. Starting with Build.VERSION_CODES.M, LAYER_TYPE_HARDWARE is automatically applied to the view at the rendering level.&#10;If this view overrides onSetAlpha(int) to return true, then this view is responsible for applying the opacity itself.&#10;On versions Build.VERSION_CODES.LOLLIPOP_MR1 and below, note that if the view is backed by a layer and is associated with a layer paint, setting an alpha value less than 1.0 will supersede the alpha of the layer paint.&#10;Starting with Build.VERSION_CODES.M, setting a translucent alpha value will clip a View to its bounds, unless the View returns false from hasOverlappingRendering.&#10;Params:&#10;alpha – The opacity of the view." />
      <item value="Implement this method to intercept all touch screen motion events. This allows you to watch events as they are dispatched to your children, and take ownership of the current gesture at any point." />
      <item value="&#10;true if this OnItemTouchListener wishes to begin intercepting touch events, false to continue with the current behavior and continue observing future events in the gesture." />
      <item value="find Intercepting On Item Touch Listener" />
      <item value="request Disallow Intercept Touch Event" />
      <item value="disable Touch" />
      <item value="禁止触摸" />
      <item value="禁止chu'm" />
      <item value="禁止chuo'm" />
      <item value="禁止" />
      <item value="jin'z" />
      <item value="dispatch Cancel Pending Input Events" />
      <item value="dispatch Transformed Touch Event" />
      <item value="Remotable View Method" />
      <item value="intercept Touch Event" />
      <item value="Pulsing" />
      <item value="Plays the ValueAnimator in reverse. If the animation is already running, it will stop itself and play backwards from the point reached when reverse was called. If the animation is not currently running, then it will start from the end and play backwards. This behavior is only set for the current animation; future playing of the animation will use the default behavior of playing forward." />
      <item value="heating" />
      <item value="_nor heating" />
      <item value="反射" />
      <item value="fan's" />
      <item value="空调" />
      <item value="k't" />
      <item value="k't'r" />
      <item value="Transient" />
      <item value="shr" />
      <item value="cross" />
      <item value="interpolator" />
      <item value="corner Radius" />
      <item value="set Radius Radii" />
      <item value="radius" />
      <item value="corners" />
      <item value="mutate" />
      <item value="Cross Fade" />
      <item value="Fade" />
      <item value="reverse" />
      <item value="暖色" />
      <item value="暖色&#10;" />
      <item value="nian'se" />
      <item value="减&#10;" />
      <item value="减少" />
      <item value="jian's" />
      <item value="Too many arguments for public/*package*/ constructor ScanResult() defined in android.net.wifi.ScanResult" />
      <item value="真实" />
      <item value="shixianz实现" />
      <item value="shixianz实现制" />
      <item value="Returns a Flowable that mirrors the source Publisher but applies a timeout policy for each emitted item. If the next item isn't emitted within the specified timeout duration starting from its predecessor, the resulting Publisher terminates and notifies Subscribers of a TimeoutException" />
      <item value="未发现设备" />
      <item value="wei" />
      <item value="unfind device" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1132" />
        <entry key="ENGLISH" value="1130" />
        <entry key="CHINESE_TRADITIONAL" value="6" />
        <entry key="RUSSIAN" value="4" />
        <entry key="FRENCH" value="2" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="KOREAN" value="11" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1645081820442" />
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
  </component>
</application>