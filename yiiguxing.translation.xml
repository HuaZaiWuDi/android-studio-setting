<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="373" />
    <option name="newTranslationDialogX" value="352" />
    <option name="newTranslationDialogY" value="457" />
    <histories>
      <item value="ENV PERVIEW Fragment" />
      <item value="Removes the entry for the specified key only if it is mapped to the specified value." />
      <item value="Removes the entry for the specified key only if it is mapped to the specified value.&#10;Returns:&#10;true if entry was removed" />
      <item value="The vertical margin, as a percentage of the container's height, between the container and the widget" />
      <item value="The vertical margin, as a percentage of the container's height, between the container and the widget. See Gravity.apply for how this is used. This field is added with y to supply the yAdj parameter." />
      <item value=" if the key is of an inappropriate type for this map (optional)" />
      <item value="if the remove operation is not supported by this map" />
      <item value="if the specified key is null and this map does not permit null" />
      <item value="cycle interpolator" />
      <item value="Sets the opacity of the view to a value from 0 to 1, where 0 means the view is completely transparent and 1 means the view is completely opaque.&#10;Note: setting alpha to a translucent value (0 &lt; alpha &lt; 1) can have significant performance implications, especially for large views. It is best to use the alpha property sparingly and transiently, as in the case of fading animations." />
      <item value="Sets a tag associated with this view and a key. A tag can be used to mark a view in its hierarchy and does not have to be unique within the hierarchy. Tags can also be used to store data within a view without resorting to another data structure. The specified key should be an id declared in the resources of the application to ensure it is unique (see the ID resource type). Keys identified as belonging to the Android framework or not associated with any package will cause an IllegalArgumentException to be thrown.&#10;Params:&#10;key – The key identifying the tag&#10;tag – An Object to tag the view with" />
      <item value="The key must be an application-specific resource id." />
      <item value="remote Data" />
      <item value="local Data" />
      <item value="Sets the Drawables (if any) to appear to the left of, above, to the right of, and below the text. Use null if you do not want a Drawable there. The Drawables must already have had Drawable.setBounds called." />
      <item value="Sets the Drawables (if any) to appear to the start of, above, to the end of, and below the text. Use 0 if you do not want a Drawable there. The Drawables' bounds will be set to their intrinsic bounds.&#10;Calling this method will overwrite any Drawables previously set using setCompoundDrawables or related methods." />
      <item value="The Drawables' bounds will be set to their intrinsic bounds.&#10;" />
      <item value="Calling this method will overwrite any Drawables previously set using setCompoundDrawablesRelative or related methods." />
      <item value="The Drawables' bounds will be set to their intrinsic bounds" />
      <item value="&#10;The horizontal extent of the scrollbar's thumb" />
      <item value="compute Horizontal Scroll Range" />
      <item value="compute Vertical Scroll Offset" />
      <item value="Starts the underlying Animator for a set of properties. We use a single animator that simply runs from 0 to 1, and then use that fractional value to set each property value accordingly." />
      <item value="the animation is no longer changing anything - cancel it" />
      <item value="Starts the currently pending property animations immediately. Calling start() is optional because all animations start automatically at the next opportunity. However, if the animations are needed to start immediately and synchronously (not at the time when the next event is processed by the hierarchy, which is when the animations would begin otherwise), then this method can be used." />
      <item value="category" />
      <item value="cate" />
      <item value="种类" />
      <item value="zong'lei" />
      <item value="宗磊" />
      <item value="类型" />
      <item value="Style for setStyle(int, int): don't draw any frame at all; the view hierarchy returned by onCreateView is entirely responsible for drawing the dialog." />
      <item value="coordinator" />
      <item value="Collapsed" />
      <item value="Sets whether this bottom sheet should skip the collapsed state when it is being hidden after it is expanded once. Setting this to true has no effect unless the sheet is hideable.&#10;Params:&#10;skipCollapsed – True if the bottom sheet should skip the collapsed state." />
      <item value="Gets the ratio for the height of the BottomSheet in the STATE_HALF_EXPANDED state." />
      <item value="Returns the current expanded offset. If fitToContents is true, it will automatically pick the offset depending on the height of the content." />
      <item value="Sets whether the height of the expanded sheet is determined by the height of its contents, or if it is expanded in two stages (half the height of the parent container, full height of parent container). Default value is true." />
      <item value="eturns:&#10;whether the height of the expanded sheet is determined by the height of its contents, or if it is expanded in two stages (half the height of the parent container, full height of parent container)." />
      <item value="Set the width and height layout parameters of the window. The default for both of these is MATCH_PARENT; you can change them to WRAP_CONTENT or an absolute value to make a window that is not full-screen." />
      <item value="An overriding function is not allowed to specify default values for its parameters" />
      <item value="getWidth()" />
      <item value="工厂" />
      <item value="g'cahng'a" />
      <item value="g'c" />
      <item value="launch" />
      <item value="laun" />
      <item value="lu" />
      <item value="启动" />
      <item value="外部" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1438" />
        <entry key="ENGLISH" value="1416" />
        <entry key="CHINESE_TRADITIONAL" value="6" />
        <entry key="RUSSIAN" value="4" />
        <entry key="FRENCH" value="2" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="KOREAN" value="11" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1647252738382" />
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
  </component>
</application>