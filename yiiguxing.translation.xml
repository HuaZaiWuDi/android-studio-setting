<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="373" />
    <option name="newTranslationDialogX" value="572" />
    <option name="newTranslationDialogY" value="129" />
    <histories>
      <item value="Cannot add the same observer with different lifecycles" />
      <item value="Scroll vertically by dy pixels in screen coordinates and return the distance traveled. The default implementation does nothing and returns 0." />
      <item value="Horizontal start direction. Resolved to LEFT or RIGHT depending on RecyclerView's layout direction. Used for swipe &amp; drag control." />
      <item value="Notify the widget that refresh state has changed. Do not call this when refresh is triggered by a swipe gesture." />
      <item value="Whether or not the view should show refresh progress." />
      <item value="context - the context of the coroutine. The default value is an event loop on the current thread. block - the coroutine code." />
      <item value="Runs a new coroutine and blocks the current thread interruptibly until its completion. This function should not be used from a coroutine. It is designed to bridge regular blocking code to libraries that are written in suspending style, to be used in main functions and in tests." />
      <item value="autofill Client Run On Ui Thread" />
      <item value="Runs the specified action on the UI thread. If the current thread is the UI thread, then the action is executed immediately. If the current thread is not the UI thread, the action is posted to the event queue of the UI thread. Params: action – the action to run on the UI thread" />
      <item value="Cannot access database on the main thread since it may potentially lock the UI for a long period of time." />
      <item value="Attempt to invoke interface method 'void java.util.concurrent.Executor.execute(java.lang.Runnable)' on a null object reference" />
      <item value="device Info Ready" />
      <item value="sign sensor setting" />
      <item value="sign sensor gesture setting" />
      <item value="自检" />
      <item value="z" />
      <item value="A view is currently settling into place as a result of a fling or predefined non-interactive motion." />
      <item value="Indicates that a drawer is in the process of settling to a final position." />
      <item value="预览" />
      <item value="yu'lan" />
      <item value="yuyu'lan" />
      <item value="重复" />
      <item value="转换" />
      <item value="zha" />
      <item value="后一个" />
      <item value="前一个" />
      <item value="fading Edge" />
      <item value="requires Fading Edge" />
      <item value="Boolean that controls whether a view should have sound effects enabled for events such as clicking and touching." />
      <item value="Occupancy Sensor" />
      <item value="Create a new non focusable popup window which can display the contentView. The dimension of the window are (0,0). The popup does not provide any background. This should be handled by the content view. Params: contentView – the popup's content" />
      <item value="Recommend Panel" />
      <item value="格式" />
      <item value="high Light masking" />
      <item value="Particulate Matter Sensor" />
      <item value="Room cannot verify the data integrity. Looks like you've changed schema but forgot to update the version number. You can simply fix this by increasing the version number." />
      <item value="The list of Primary Key column names. If you would like to define an auto generated primary key, you can use PrimaryKey annotation on the field with PrimaryKey.autoGenerate() set to true. Returns: The primary key of this Entity. Can be empty if the class has a field annotated with PrimaryKey." />
      <item value="组合&#10;" />
      <item value="组合" />
      <item value="z组合" />
      <item value="Only 'const val' can be used in constant expressions" />
      <item value="List of indices on the table. Returns: The list of indices on the table." />
      <item value="Declares a foreign key on another Entity. Foreign keys allows you to specify constraints across Entities such that SQLite will ensure that the relationship is valid when you modify the database. When a foreign key constraint is specified, SQLite requires the referenced columns to be part of a unique index in the parent table or the primary key of that table. You must create a unique index in the parent entity that covers the referenced columns (Room will verify this at compile time and print an error if it is missing). It is also recommended to create an index on the child table to avoid full table scans when the parent table is modified. If a suitable index on the child table is missing, Room will print RoomWarnings.MISSING_INDEX_ON_FOREIGN_KEY_CHILD warning. A foreign key constraint can be deferred until the transaction is complete. This is useful if you are doing bulk inserts into the database in a single transaction. By default, foreign key constraints are immediate but you can change this value by setting deferred() to true. You can also use defer_foreign_keys PRAGMA to defer them depending on your transaction. Please refer to the SQLite foreign keys documentation for details." />
      <item value="The list of column names in the current Entity. Number of columns must match the number of columns specified in parentColumns(). Returns: The list of column names in the current Entity." />
      <item value="The list of column names in the parent Entity. Number of columns must match the number of columns specified in childColumns(). Returns: The list of column names in the parent Entity. See Also: childColumns()" />
      <item value="Foreign Key" />
      <item value="IGNORE" />
      <item value="OnConflict strategy constant to ignore the conflict. An Insert DAO method that returns the inserted rows ids will return -1 for rows that are not inserted since this strategy will ignore the row if there is a conflict." />
      <item value="OnConflict strategy constant to abort the transaction. The transaction is rolled back." />
      <item value="OnConflict strategy constant to rollback the transaction. Deprecated Does not work with Android's current SQLite bindings. Use ABORT to roll back the transaction." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2103" />
        <entry key="ENGLISH" value="2104" />
        <entry key="CHINESE_TRADITIONAL" value="6" />
        <entry key="BASQUE" value="1" />
        <entry key="RUSSIAN" value="4" />
        <entry key="FRENCH" value="2" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="KOREAN" value="11" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="SPANISH" value="3" />
        <entry key="ITALIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1654481277778" />
  </component>
</application>