<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="373" />
    <option name="newTranslationDialogX" value="352" />
    <option name="newTranslationDialogY" value="457" />
    <histories>
      <item value="If some part of this view is not clipped by any of its parents, then return that area in r in global (root) coordinates. To convert r to local coordinates (without taking possible View rotations into account), offset it by -globalOffset (e.g. r.offset(-globalOffset.x, -globalOffset.y)). If the view is completely clipped or translated out, return false." />
      <item value="counter-clockwise" />
      <item value="Set the clip to the difference of the current clip and the specified rectangle, which is expressed in local coordinates." />
      <item value="&#10;true if the resulting clip is non-empty" />
      <item value="Intersect the current clip with the specified rectangle, which is expressed in local coordinates." />
      <item value="INTERSECT" />
      <item value="clip" />
      <item value="Intersect the current clip with the specified path.&#10;Params:&#10;path – The path to intersect with the current clip&#10;Returns:&#10;true if the resulting clip is non-empty" />
      <item value="Set the clip to the difference of the current clip and the specified path.&#10;Params:&#10;path – The path used in the difference operation&#10;Returns:&#10;true if the resulting clip is non-empty" />
      <item value="clip Out" />
      <item value="threshold" />
      <item value="滑动阈值" />
      <item value="黄" />
      <item value="Query if horizontal scrolling is currently supported. The default implementation returns false." />
      <item value="direction – Negative to check scrolling left, positive to check scrolling right." />
      <item value="Check if this view can be scrolled horizontally in a certain direction.&#10;Params:&#10;direction – Negative to check scrolling left, positive to check scrolling right.&#10;Returns:&#10;true if this view can be scrolled in the specified direction, false otherwise." />
      <item value="Callback method to be invoked when the RecyclerView has been scrolled. This will be called after the scroll has completed.&#10;This callback will also be called if visible item range changes after a layout calculation. In that case, dx and dy will be 0.&#10;Params:&#10;recyclerView – The RecyclerView which scrolled.&#10;dx – The amount of horizontal scroll.&#10;dy – The amount of vertical scroll." />
      <item value="This method will be invoked when the current page is scrolled, either as part of a programmatically initiated smooth scroll or a user initiated touch scroll.&#10;Params:&#10;position – Position index of the first page currently being displayed. Page position+1 will be visible if positionOffset is nonzero.&#10;positionOffset – Value from [0, 1) indicating the offset from the page at position.&#10;positionOffsetPixels – Value in pixels indicating the offset from position." />
      <item value="ACCESS CONFIG Main Fragment" />
      <item value="ringtone" />
      <item value="ENV PERVIEW Fragment" />
      <item value="Removes the entry for the specified key only if it is mapped to the specified value." />
      <item value="Removes the entry for the specified key only if it is mapped to the specified value.&#10;Returns:&#10;true if entry was removed" />
      <item value="The vertical margin, as a percentage of the container's height, between the container and the widget" />
      <item value="The vertical margin, as a percentage of the container's height, between the container and the widget. See Gravity.apply for how this is used. This field is added with y to supply the yAdj parameter." />
      <item value=" if the key is of an inappropriate type for this map (optional)" />
      <item value="if the remove operation is not supported by this map" />
      <item value="if the specified key is null and this map does not permit null" />
      <item value="cycle interpolator" />
      <item value="Sets the opacity of the view to a value from 0 to 1, where 0 means the view is completely transparent and 1 means the view is completely opaque.&#10;Note: setting alpha to a translucent value (0 &lt; alpha &lt; 1) can have significant performance implications, especially for large views. It is best to use the alpha property sparingly and transiently, as in the case of fading animations." />
      <item value="Sets a tag associated with this view and a key. A tag can be used to mark a view in its hierarchy and does not have to be unique within the hierarchy. Tags can also be used to store data within a view without resorting to another data structure. The specified key should be an id declared in the resources of the application to ensure it is unique (see the ID resource type). Keys identified as belonging to the Android framework or not associated with any package will cause an IllegalArgumentException to be thrown.&#10;Params:&#10;key – The key identifying the tag&#10;tag – An Object to tag the view with" />
      <item value="The key must be an application-specific resource id." />
      <item value="remote Data" />
      <item value="local Data" />
      <item value="Sets the Drawables (if any) to appear to the left of, above, to the right of, and below the text. Use null if you do not want a Drawable there. The Drawables must already have had Drawable.setBounds called." />
      <item value="Sets the Drawables (if any) to appear to the start of, above, to the end of, and below the text. Use 0 if you do not want a Drawable there. The Drawables' bounds will be set to their intrinsic bounds.&#10;Calling this method will overwrite any Drawables previously set using setCompoundDrawables or related methods." />
      <item value="The Drawables' bounds will be set to their intrinsic bounds.&#10;" />
      <item value="Calling this method will overwrite any Drawables previously set using setCompoundDrawablesRelative or related methods." />
      <item value="The Drawables' bounds will be set to their intrinsic bounds" />
      <item value="&#10;The horizontal extent of the scrollbar's thumb" />
      <item value="compute Horizontal Scroll Range" />
      <item value="compute Vertical Scroll Offset" />
      <item value="Starts the underlying Animator for a set of properties. We use a single animator that simply runs from 0 to 1, and then use that fractional value to set each property value accordingly." />
      <item value="the animation is no longer changing anything - cancel it" />
      <item value="Starts the currently pending property animations immediately. Calling start() is optional because all animations start automatically at the next opportunity. However, if the animations are needed to start immediately and synchronously (not at the time when the next event is processed by the hierarchy, which is when the animations would begin otherwise), then this method can be used." />
      <item value="category" />
      <item value="cate" />
      <item value="种类" />
      <item value="zong'lei" />
      <item value="宗磊" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1475" />
        <entry key="ENGLISH" value="1442" />
        <entry key="CHINESE_TRADITIONAL" value="6" />
        <entry key="RUSSIAN" value="4" />
        <entry key="FRENCH" value="2" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="KOREAN" value="11" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1647828418109" />
  </component>
  <component name="Settings">
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
  </component>
</application>