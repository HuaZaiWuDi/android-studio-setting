<application>
  <component name="AppStorage">
    <histories>
      <item value="not locked, return timer interval in milliseconds" />
      <item value="air conditioning" />
      <item value="空调" />
      <item value="Head" />
      <item value="setting image rotate" />
      <item value="sensivity" />
      <item value="detection" />
      <item value="cover" />
      <item value="Sets how many times to repeat the marquee animation. Only applied if the * TextView has marquee enabled. Set to -1 to repeat indefinitely." />
      <item value="Gets the number of times the marquee animation is repeated. Only meaningful if the * TextView has marquee enabled." />
      <item value="exit" />
      <item value="exit animation" />
      <item value="enter animation" />
      <item value="An animation or animator resource ID used for the enter animation on the * view of the fragment being added or attached." />
      <item value="An animation or animator resource ID used for the enter animation on the * view of the fragment being readded or reattached caused by * {@link FragmentManager#popBackStack()} or similar methods." />
      <item value="top-left corner pixel must be either opaque white or transparent." />
      <item value="Returns true if this is the Service Changed characteristic." />
      <item value="the gatt device with services discovered" />
      <item value="This method should return &lt;code&gt;true&lt;/code&gt; when the gatt device supports the * optional services. The default implementation returns &lt;code&gt;false&lt;/code&gt;." />
      <item value="Called each time the task queue gets cleared." />
      <item value="Called when the initialization queue is complete." />
      <item value="widget icon item" />
      <item value="available" />
      <item value="Distance in pixels a touch can wander before we think the user is scrolling" />
      <item value="This is called when the user has started touching this widget." />
      <item value="Whether the device, that was connected using auto connect, has disconnected." />
      <item value="Unresolved reference: BleGattCallback" />
      <item value="Return true if the fragment has been supportVisible." />
      <item value="ued" />
      <item value="the function that is called with a Flowable that signals a value when the Single      *                signalled a success value and returns a Publisher that has to signal a value to      *                trigger a resubscription to the current Single, otherwise the terminal signal of      *                the Publisher will be the terminal signal of the sequence as well." />
      <item value="the function that is called with a Flowable that signals a value when the Single * signalled a success value and returns a Publisher that has to signal a value to * trigger a resubscription to the current Single, otherwise the terminal signal of * the Publisher will be the terminal signal of the sequence as well." />
      <item value="does not operate by default on a particular {@link Scheduler}.&lt;/dd&gt;" />
      <item value="honors the backpressure of the downstream consumer." />
      <item value="Re-subscribes to the current Single if * the Publisher returned by the handler function signals a value in response to a * value signalled through the Flowable the handle receives." />
      <item value="ordinal" />
      <item value="Requests new MTU. On Android Lollipop or newer it will send the MTU request to the connected * device. On older versions of Android the * {@link MtuCallback#onMtuChanged(BluetoothDevice, int)} set with * {@link MtuRequest#with(MtuCallback)} will be called with current MTU value. * &lt;p&gt; * The returned request must be either enqueued using {@link Request#enqueue()} for * asynchronous use, or awaited using await() in synchronous execution." />
      <item value="unresolved reference. None of the following candidates is applicable because of receiver type mismatch:" />
      <item value="Retrieves, but does not remove, the first element of this deque, * or returns {@code null} if this deque is empty." />
      <item value="offer" />
      <item value="Retrieves and removes the first element of this deque, * or returns {@code null} if this deque is empty." />
      <item value="Pushes an element onto the stack represented by this deque (in other * words, at the head of this deque) if it is possible to do so * immediately without violating capacity restrictions, throwing an * {@code IllegalStateException} if no space is currently available." />
      <item value="initialize your data structure here." />
      <item value="Check your module classpath for missing or conflicting dependencies" />
      <item value="External" />
      <item value="cannot find symbol" />
      <item value="for-each not applicable to expression type" />
      <item value="peek" />
      <item value="得分" />
      <item value="Enable or disable pan gesture detection. Disabling pan causes the image to be centered. Pan * can still be changed from code." />
      <item value="State change originated from a double tap zoom anim." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="766" />
        <entry key="ENGLISH" value="767" />
        <entry key="FRENCH" value="1" />
        <entry key="KOREAN" value="92" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="JAPANESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>