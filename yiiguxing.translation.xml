<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="373" />
    <option name="newTranslationDialogX" value="572" />
    <option name="newTranslationDialogY" value="129" />
    <histories>
      <item value="orientation" />
      <item value="Sites" />
      <item value="has no zero argument constructor" />
      <item value="Enforcer" />
      <item value="m Fragment Max Lifecycle Enforcer" />
      <item value="Caused by: java.lang.IllegalStateException: Room cannot verify the data integrity. Looks like you've changed schema but forgot to update the version number. You can simply fix this by increasing the version number." />
      <item value="true to prevent Target.onLoadFailed(Drawable) from being called on target, typically because the listener wants to update the target or the object the target wraps itself or false to allow Target.onLoadFailed(Drawable) to be called on target." />
      <item value="功率" />
      <item value="电量" />
      <item value="点了" />
      <item value="默认" />
      <item value="Weather" />
      <item value="后一个" />
      <item value="hou" />
      <item value="bitLength – length of the new BigInteger in bits." />
      <item value="Returns a random positive BigInteger instance in the range [0, pow(2, bitLength)-1] which is probably prime. The probability that the returned BigInteger is prime is greater than 1 - 12&lt;sup&gt;100&lt;sup&gt;)." />
      <item value="Overall orientation of the screen. May be one of ORIENTATION_LANDSCAPE, ORIENTATION_PORTRAIT." />
      <item value="index – The index of the layer to modify, must be in the range 0...getNumberOfLayers()-1. id – The id to assign to the layer." />
      <item value="Notified when a context click occurs. Params: e – The motion event that occurred during the context click. Returns: true if the event is consumed, else false" />
      <item value="Sets the listener which will be called for context clicks. Params: onContextClickListener – the listener invoked for all the callbacks, or null to stop listening for context clicks." />
      <item value="Set whether longpress is enabled, if this is enabled when a user presses and holds down you get a longpress event and nothing further. If it's disabled the user can press and hold down and then later moved their finger and you will get scroll events. By default longpress is enabled. Params: isLongpressEnabled – whether longpress should be enabled." />
      <item value="ALARMING" />
      <item value="compulsory" />
      <item value="dispatch" />
      <item value="true if the event is consumed, else false" />
      <item value="Notified when a tap occurs with the up MotionEvent that triggered it." />
      <item value="Detects various gestures and events using the supplied MotionEvents. The GestureDetector.OnGestureListener callback will notify users when a particular motion event has occurred. This class should only be used with MotionEvents reported via touch (don't use for trackball events). To use this class:" />
      <item value="The listener that is used to notify when gestures occur. If you want to listen for all the different gestures then implement this interface. If you only want to listen for a subset it might be easier to extend GestureDetector.SimpleOnGestureListener." />
      <item value="Notified when a single-tap occurs. Unlike GestureDetector.OnGestureListener.onSingleTapUp(MotionEvent), this will only be called after the detector is confident that the user's first tap is not followed by a second tap leading to a double-tap gesture." />
      <item value="Notified when a tap occurs with the down MotionEvent that triggered it. This will be triggered immediately for every down event. All other events should be preceded by this." />
      <item value="The user has performed a down MotionEvent and not performed a move or up yet. This event is commonly used to provide visual feedback to the user to let them know that their action has been recognized i.e. highlight an element." />
      <item value="on Single Tap Up" />
      <item value="Notified when a tap occurs with the up MotionEvent that triggered it. Params: e – The up motion event that completed the first tap Returns: true if the event is consumed, else false" />
      <item value="自定义" />
      <item value="custom" />
      <item value="模拟" />
      <item value="The listener that is used to notify when a context click occurs. When listening for a context click ensure that you call onGenericMotionEvent(MotionEvent) in View.onGenericMotionEvent(MotionEvent)." />
      <item value="Detects various gestures and events using the supplied MotionEvents. The GestureDetector.OnGestureListener callback will notify users when a particular motion event has occurred. This class should only be used with MotionEvents reported via touch (don't use for trackball events). To use this class: Create an instance of the GestureDetector for your View In the View.onTouchEvent(MotionEvent) method ensure you call onTouchEvent(MotionEvent). The methods defined in your callback will be executed when the events occur. If listening for GestureDetector.OnContextClickListener.onContextClick(MotionEvent) you must call onGenericMotionEvent(MotionEvent) in View.onGenericMotionEvent(MotionEvent)." />
      <item value="{@code true} if one of the above receivers consumed the event, {@code false} otherwise" />
      <item value="True if there was an assigned OnContextClickListener that consumed the event, false otherwise." />
      <item value="Calls this view's OnLongClickListener, if it is defined. Invokes the context menu if the OnLongClickListener did not consume the event, optionally anchoring it to an (x,y) coordinate." />
      <item value="intercepted" />
      <item value="dispatch Touch Event" />
      <item value="disallow Intercept" />
      <item value="Implement this method to intercept all touch screen motion events. This allows you to watch events as they are dispatched to your children, and take ownership of the current gesture at any point. Using this function takes some care, as it has a fairly complicated interaction with View.onTouchEvent(MotionEvent), and using it requires implementing that method as well as this one in the correct way. Events will be received in the following order: You will receive the down event here. The down event will be handled either by a child of this view group, or given to your own onTouchEvent() method to handle; this means you should implement onTouchEvent() to return true, so you will continue to see the rest of the gesture (instead of looking for a parent view to handle it). Also, by returning true from onTouchEvent(), you will not receive any following events in onInterceptTouchEvent() and all touch processing must happen in onTouchEvent() like normal. For as long as you return false from this function, each following event (up to and including the final up) will be delivered first here and then to the target's onTouchEvent(). If you return true from here, you will not receive any following events: the target view will receive the same event but with the action MotionEvent.ACTION_CANCEL, and all further events will be delivered to your onTouchEvent() method and no longer appear here. Params: ev – The motion event being dispatched down the hierarchy. Returns: Return true to steal motion events from the children and have them dispatched to this ViewGroup through onTouchEvent(). The current target will receive an ACTION_CANCEL event, and no further messages will be delivered here." />
      <item value="Implement this method to handle touch screen motion events. If this method is used to detect click actions, it is recommended that the actions be performed by implementing and calling performClick(). This will ensure consistent system behavior, including:" />
      <item value="mplement this method to handle touch screen motion events. If this method is used to detect click actions, it is recommended that the actions be performed by implementing and calling performClick(). This will ensure consistent system behavior, including:" />
      <item value="Remove the tap detection timer." />
      <item value="Implement this method to intercept all touch screen motion events. This allows you to watch events as they are dispatched to your children, and take ownership of the current gesture at any point." />
      <item value="Indicates this view can be context clicked. When context clickable, a View reacts to a context click (e.g. a primary stylus button press or right mouse click) by notifying the OnContextClickListener." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1861" />
        <entry key="ENGLISH" value="1861" />
        <entry key="CHINESE_TRADITIONAL" value="6" />
        <entry key="RUSSIAN" value="4" />
        <entry key="FRENCH" value="2" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="KOREAN" value="11" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="SPANISH" value="3" />
        <entry key="ITALIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1652237191860" />
  </component>
</application>