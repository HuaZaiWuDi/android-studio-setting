<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="373" />
    <option name="newTranslationDialogX" value="572" />
    <option name="newTranslationDialogY" value="129" />
    <histories>
      <item value="{@code true} if one of the above receivers consumed the event, {@code false} otherwise" />
      <item value="True if there was an assigned OnContextClickListener that consumed the event, false otherwise." />
      <item value="Calls this view's OnLongClickListener, if it is defined. Invokes the context menu if the OnLongClickListener did not consume the event, optionally anchoring it to an (x,y) coordinate." />
      <item value="intercepted" />
      <item value="dispatch Touch Event" />
      <item value="disallow Intercept" />
      <item value="Implement this method to intercept all touch screen motion events. This allows you to watch events as they are dispatched to your children, and take ownership of the current gesture at any point. Using this function takes some care, as it has a fairly complicated interaction with View.onTouchEvent(MotionEvent), and using it requires implementing that method as well as this one in the correct way. Events will be received in the following order: You will receive the down event here. The down event will be handled either by a child of this view group, or given to your own onTouchEvent() method to handle; this means you should implement onTouchEvent() to return true, so you will continue to see the rest of the gesture (instead of looking for a parent view to handle it). Also, by returning true from onTouchEvent(), you will not receive any following events in onInterceptTouchEvent() and all touch processing must happen in onTouchEvent() like normal. For as long as you return false from this function, each following event (up to and including the final up) will be delivered first here and then to the target's onTouchEvent(). If you return true from here, you will not receive any following events: the target view will receive the same event but with the action MotionEvent.ACTION_CANCEL, and all further events will be delivered to your onTouchEvent() method and no longer appear here. Params: ev – The motion event being dispatched down the hierarchy. Returns: Return true to steal motion events from the children and have them dispatched to this ViewGroup through onTouchEvent(). The current target will receive an ACTION_CANCEL event, and no further messages will be delivered here." />
      <item value="Implement this method to handle touch screen motion events. If this method is used to detect click actions, it is recommended that the actions be performed by implementing and calling performClick(). This will ensure consistent system behavior, including:" />
      <item value="mplement this method to handle touch screen motion events. If this method is used to detect click actions, it is recommended that the actions be performed by implementing and calling performClick(). This will ensure consistent system behavior, including:" />
      <item value="Remove the tap detection timer." />
      <item value="Implement this method to intercept all touch screen motion events. This allows you to watch events as they are dispatched to your children, and take ownership of the current gesture at any point." />
      <item value="Indicates this view can be context clicked. When context clickable, a View reacts to a context click (e.g. a primary stylus button press or right mouse click) by notifying the OnContextClickListener." />
      <item value="on Intercept Touch Event" />
      <item value="质量" />
      <item value="Item decorations are ordered. Decorations placed earlier in the list will be runquerieddrawn first for their effects on item views. Padding added to views will be nested; a padding added by an earlier decoration will mean further item decorations in the list will be asked to drawpad within the previous decoration's given area." />
      <item value="Position in the decoration chain to insert this decoration at. If this value is negative the decoration will be added at the end." />
      <item value="Add an RecyclerView.ItemDecoration to this RecyclerView. Item decorations can affect both measurement and drawing of individual item views." />
      <item value="Position in the decoration chain to insert this decoration at. If this value is" />
      <item value="Add an RecyclerView.ItemDecoration to this RecyclerView. Item decorations can affect both measurement and drawing of individual item views. Item decorations are ordered. Decorations placed earlier in the list will be runquerieddrawn first for their effects on item views. Padding added to views will be nested; a padding added by an earlier decoration will mean further item decorations in the list will be asked to drawpad within the previous decoration's given area. Params: decor – Decoration to add" />
      <item value="is Have" />
      <item value="Returns an RecyclerView.ItemDecoration previously added to this RecyclerView. Params: index – The index position of the desired ItemDecoration. Returns: the ItemDecoration at index position Throws: IndexOutOfBoundsException – on invalid index" />
      <item value="ring" />
      <item value="环" />
      <item value="huan" />
      <item value="addViewInner() will call child.requestLayout() when setting the new LayoutParams therefore, we call requestLayout() on ourselves before, so that the child's request will be blocked at our level" />
      <item value="requestLayout() was called during layout." />
      <item value="Set this flag to indicate that any further requests are happening during the second pass, which may result in posting those requests to the next frame instead" />
      <item value="requestLayout() was called during layout. If no layout-request flags are set on the requesting views, there is no problem. If some requests are still pending, then we need to clear those flags and do a full requestmeasurelayout pass to handle this situation." />
      <item value="Process fresh layout requests, then measure and layout" />
      <item value="during layout: running second layout pass" />
      <item value="running second layout pass" />
      <item value="排除" />
      <item value="pai'xu" />
      <item value="Whether to split the track and leave a gap for the thumb drawable." />
      <item value="split Track" />
      <item value="强制" />
      <item value="未知" />
      <item value="wei'zhi" />
      <item value="位置" />
      <item value="Sets the next animation to play for this view. If you want the animation to play immediately, use startAnimation(Animation) instead. This method provides allows fine-grained control over the start time and invalidation, but you must make sure that 1) the animation has a start time set, and 2) the view's parent (which controls animations on its children) will be invalidated when the animation is supposed to start." />
      <item value="Row too big to fit into CursorWindow requiredPos=0, totalRows=1" />
      <item value="consumption home" />
      <item value="Classifier 'myObserver' does not have a companion object, and thus must be initialized here" />
      <item value="Failure from system" />
      <item value="data parcel size 613056 bytes" />
      <item value="开合" />
      <item value="开合帘" />
      <item value="Folding Blinds" />
      <item value="Dream Blinds" />
      <item value="Zebra Blinds" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1799" />
        <entry key="ENGLISH" value="1800" />
        <entry key="CHINESE_TRADITIONAL" value="6" />
        <entry key="RUSSIAN" value="4" />
        <entry key="FRENCH" value="2" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="KOREAN" value="11" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="SPANISH" value="3" />
        <entry key="ITALIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1651228653513" />
  </component>
</application>