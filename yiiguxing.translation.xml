<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="373" />
    <option name="newTranslationDialogX" value="572" />
    <option name="newTranslationDialogY" value="129" />
    <histories>
      <item value="Creates a centered bitmap of the desired size. Params: source – original bitmap source width – targeted width height – targeted height options – options used during thumbnail extraction" />
      <item value="Set the number of pages that should be retained to either side of the currently visible page(s). Pages beyond this limit will be recreated from the adapter when needed. Set this to OFFSCREEN_PAGE_LIMIT_DEFAULT to use RecyclerView's caching strategy. The given value must either be larger than 0, or OFFSCREEN_PAGE_LIMIT_DEFAULT. Pages within limit pages away from the current page are created and added to the view hierarchy, even though they are not visible on the screen. Pages outside this limit will be removed from the view hierarchy, but the ViewHolders will be recycled as usual by RecyclerView. This is offered as an optimization. If you know in advance the number of pages you will need to support or have lazy-loading mechanisms in place on your pages, tweaking this setting can have benefits in perceived smoothness of paging animations and interaction. If you have a small number of pages (3-4) that you can keep active all at once, less time will be spent in layout for newly created view subtrees as the user pages back and forth. You should keep this limit low, especially if your pages have complex layouts. By default it is set to OFFSCREEN_PAGE_LIMIT_DEFAULT. Params: limit – How many pages will be kept offscreen on either side. Valid values are all values &gt;= 1 and OFFSCREEN_PAGE_LIMIT_DEFAULT Throws:" />
      <item value="point In View" />
      <item value="Inconsistency detected. Invalid view holder adapter" />
      <item value="end Inclusive" />
      <item value="Gets the current value of the default locale for this instance of the Java Virtual Machine. The Java Virtual Machine sets the default locale during startup based on the host environment. It is used by many locale-sensitive methods if no locale is explicitly specified. It can be changed using the setDefault method. Returns: the default locale for this instance of the Java Virtual Machine" />
      <item value="Define the tileable drawable used to draw the progress bar in progress mode. If the drawable is a BitmapDrawable or contains BitmapDrawables, a tiled copy will be generated for display as a progress bar." />
      <item value="Returns the drawable currently used to draw the progress bar. This will be either getProgressDrawable() or getIndeterminateDrawable() depending on whether the progress bar is in determinate or indeterminate mode. Returns: the drawable currently used to draw the progress bar" />
      <item value="Outside the framework, instead of accessing this directly, please use getCurrentDrawable(), setProgressDrawable(Drawable), setIndeterminateDrawable(Drawable) and their tiled versions." />
      <item value="pecifies the hotspot's location within the drawable. Params: x – The X coordinate of the center of the hotspot y – The Y coordinate of the center of the hotspot" />
      <item value="drawable Hotspot Changed" />
      <item value="draw Tick Marks" />
      <item value="allow Root Fragment Anim" />
      <item value="distinct By" />
      <item value="Roller Shade" />
      <item value="Called when a view created by this holder has been attached to a window. simple to solve item will layout using all setFullSpan Params: holder -" />
      <item value="This is a function of current event -&gt; target disposal event. That is to say that if event &quot;Attach&quot; returns &quot;Detach&quot;, then any stream subscribed to during Attach will autodispose on Detach." />
      <item value="Destroyed state for a LifecycleOwner. After this event, this Lifecycle will not dispatch any more events. For instance, for an android.app.Activity, this state is reached right before Activity's onDestroy call." />
      <item value="Sets the current state and notifies the observers. Note that if the currentState is the same state as the last call to this method, calling this method has no effect. Params: event – The event that was received" />
      <item value="Dispatch a window visibility change down the view hierarchy. ViewGroups should override to route to their children. Params: visibility – The new visibility of the window. See Also: onWindowVisibilityChanged(int)" />
      <item value="Called when the window containing has change its visibility (between GONE, INVISIBLE, and VISIBLE). Note that this tells you whether or not your window is being made visible to the window manager; this does not tell you whether or not your window is obscured by other windows on the screen, even if it is itself visible. Params: visibility – The new visibility of the window." />
      <item value="The specified message queue synchronization barrier token has not been posted or has already been removed." />
      <item value="T Current PLAYBACK STATE" />
      <item value="set Shadow Color" />
      <item value="set Scrim Color" />
      <item value="Inconsistency detected" />
      <item value="圆角" />
      <item value="yun" />
      <item value="quan'j" />
      <item value="second Progress Color" />
      <item value="jump Drawables To Current State" />
      <item value="crash wasn't handled by all associated webviews, triggering application crash." />
      <item value="fault addr " />
      <item value="Return true if the fragment is currently added to its activity." />
      <item value="Return true if the fragment has been explicitly detached from the UI. That is, FragmentTransaction.detach(Fragment) has been used on it." />
      <item value="旋转" />
      <item value="xuan'z" />
      <item value="选择" />
      <item value="reverse" />
      <item value="略过" />
      <item value="nue'guo" />
      <item value="luo'guo" />
      <item value="luo" />
      <item value="跳" />
      <item value="跳过" />
      <item value="the delay amount" />
      <item value="Applies FitCenter and to all default types, DownsampleStrategy.FIT_CENTER to image types, and throws an exception if asked to transform an unknown type. This will override previous calls to dontTransform() and previous calls to downsample(DownsampleStrategy). See Also: transform(Class, Transformation), optionalFitCenter()" />
      <item value="Applies CenterCrop to all default types, and ignores unknown types. This will override previous calls to dontTransform(). See Also: optionalTransform(Class, Transformation), centerCrop()" />
      <item value="Called when a view created by this BaseItemProvider has been attached to a window. 当此BaseItemProvider出现在屏幕上的时候，会调用此方法" />
      <item value="command" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2379" />
        <entry key="ENGLISH" value="2380" />
        <entry key="CHINESE_TRADITIONAL" value="6" />
        <entry key="BASQUE" value="1" />
        <entry key="RUSSIAN" value="4" />
        <entry key="FRENCH" value="2" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="KOREAN" value="11" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="SPANISH" value="3" />
        <entry key="ITALIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1656578205222" />
  </component>
</application>