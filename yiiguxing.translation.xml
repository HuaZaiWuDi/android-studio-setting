<application>
  <component name="AppStorage">
    <histories>
      <item value="문이 열렸습니다." />
      <item value="열림" />
      <item value="움직임을 감지했습니다." />
      <item value="감지 내역이 없습니다." />
      <item value="年" />
      <item value="MM월 dd일" />
      <item value="오후" />
      <item value="오전" />
      <item value="00시 00분" />
      <item value="시" />
      <item value="오전 " />
      <item value="오전 00시 00분" />
      <item value="신고하기" />
      <item value="문자메시지를 보냈습니다.  [문자신고내역보기]에서 확인할 수 있습니다." />
      <item value="문자메시지를 전송에 실패했습니다.  전화로 신고해 주세요. " />
      <item value="112문자신고 보내기" />
      <item value="출동 전에 제 연락처로 먼저 전화해 주세요.  2. 출동 결과를 반드시 알려주세요." />
      <item value="움직임 감지됨" />
      <item value="内容已确认" />
      <item value="시작시간" />
      <item value="어제" />
      <item value="시간" />
      <item value="저장" />
      <item value="Gets the transformation to apply at a specified point in time. Implementations of this * method should always replace the specified Transformation or document they are doing * otherwise." />
      <item value="restrict" />
      <item value="Ensure that the duration that this animation will run is not longer * than &lt;var&gt;durationMillis&lt;/var&gt;. In addition to adjusting the duration * itself, this ensures that the repeat count also will not make it run * longer than the given time." />
      <item value="If fillEnabled is true, the animation will apply the value of fillBefore. * Otherwise, fillBefore is ignored and the animation * transformation is always applied until the animation ends." />
      <item value="true if the animation should take the value of fillBefore into account" />
      <item value="true if the animation will take fillBefore into account" />
      <item value="If fillEnabled is true, this animation will apply the value of fillBefore." />
      <item value="Indicates whether the animation transformation should be applied after the * animation ends." />
      <item value="If this animation is run as a window animation, this will make the wallpaper visible behind * the animation." />
      <item value="true if the animation should apply its transformation after it ends" />
      <item value="If fillBefore is true, this animation will apply its transformation * before the start time of the animation. Defaults to true if * {@link #setFillEnabled(boolean)} is not set to true. * Note that this applies when using an {@link * android.view.animation.AnimationSet AnimationSet} to chain * animations. The transformation is not applied before the AnimationSet * itself starts." />
      <item value="Convenience method to start the animation the first time * {@link #getTransformation(long, Transformation)} is invoked." />
      <item value="If you cancel an animation manually, you must call {@link #reset()} * before starting the animation again." />
      <item value="Cancel the animation. Cancelling an animation invokes the animation * listener, if set, to notify the end of the animation." />
      <item value="Defines what this animation should do when it reaches the end. This * setting is applied only when the repeat count is either greater than * 0 or {@link #INFINITE}. Defaults to {@link #RESTART}." />
      <item value="When the animation reaches the end and the repeat count is INFINTE_REPEAT * or a positive value, the animation restarts from the beginning." />
      <item value="If fillBefore is true, this animation will apply its transformation * before the start time of the animation. If fillBefore is false and * {@link #isFillEnabled() fillEnabled} is true, the transformation will not be applied until * the start time of the animation." />
      <item value="true if the animation has ended, false otherwise" />
      <item value="The X coordinate of the point about which the object * is being rotated, specified as an absolute number where 0 is the * left edge. This value can either be an absolute number if * pivotXType is ABSOLUTE, or a percentage (where 1.0 is 100%) * otherwise." />
      <item value="ABSOLUTE" />
      <item value="Specifies how pivotXValue should be interpreted. One of * Animation.ABSOLUTE, Animation.RELATIVE_TO_SELF, or * Animation.RELATIVE_TO_PARENT." />
      <item value="The X coordinate of the point about which the object is * being rotated, specified as an absolute number where 0 is the left * edge." />
      <item value="Repeat the animation indefinitely." />
      <item value="INFINITE" />
      <item value="specified as an absolute number where 0 is the top * edge." />
      <item value="unescaped apostrophe in string" />
      <item value="Flags for {@link #fromHtml(String, int, ImageGetter, TagHandler)}: Separate block-level * elements with line breaks (single newline character) in between. This inverts the * {@link Spanned} to HTML string conversion done with the option * {@link #TO_HTML_PARAGRAPH_LINES_INDIVIDUAL}." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="443" />
        <entry key="ENGLISH" value="443" />
        <entry key="FRENCH" value="4" />
        <entry key="KOREAN" value="13" />
        <entry key="CATALAN" value="1" />
        <entry key="ZULU" value="1" />
        <entry key="JAPANESE" value="2" />
        <entry key="ITALIAN" value="1" />
        <entry key="VIETNAMESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>