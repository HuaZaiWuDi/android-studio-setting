<application>
  <component name="AppStorage">
    <histories>
      <item value="문자메시지를 전송에 실패했습니다. 전화로 신고해 주세요." />
      <item value="112 문자신고가 실패할 경우 '112 문자신고 복사하기'를 이용하여 메시지 앱을 통해 112 문자신고를 해주세요." />
      <item value="이용하여" />
      <item value="이용하여 메시지" />
      <item value="문자발송 요청을 처리하지 못했습니다.\n 앱을 통해 문자를 발송하세요." />
      <item value="데이터 없음" />
      <item value="감지 내역이 없습니다." />
      <item value="데이터 없음 " />
      <item value="분" />
      <item value="시간" />
      <item value="설정하지 않음" />
      <item value="움직임 감지 알림 설정이 자동으로 꺼집니다.움직임 감지 알림 설정이 자동으로 꺼집니다." />
      <item value="Please search the address." />
      <item value="Complete confirming the contents" />
      <item value="内容已确认" />
      <item value="Perform the operation associated with this PendingIntent, allowing the * caller to specify information about the Intent to use and be notified * when the send has completed." />
      <item value="to control which unspecified parts * of the intent that can be supplied when the actual send happens." />
      <item value="Use with {@link #fillIn} to allow the current identifier value to be * overwritten, even if it is already set." />
      <item value="Clip Data" />
      <item value="Use with {@link #fillIn} to allow the current ClipData to be * overwritten, even if it is already set." />
      <item value="COMPONENT" />
      <item value="CATEGORIES" />
      <item value="Use with {@link #fillIn} to allow the current action value to be * overwritten, even if it is already set. */" />
      <item value="Returns an existing or new PendingIntent matching the given * parameters. May return null only if {@link #FLAG_NO_CREATE} has been * supplied." />
      <item value="Flag indicating that the created PendingIntent should be immutable. * This means that the additional intent argument passed to the send * methods to fill in unpopulated properties of this intent will be * ignored." />
      <item value="* * Use with {@link #fillIn} to allow the current data or type value * overwritten, even if it is already set." />
      <item value="IMMUTABLE" />
      <item value="Flag indicating that if the described PendingIntent already exists, * the current one should be canceled before generating a new one. * For use with {@link #getActivity}, {@link #getBroadcast}, and * {@link #getService}. &lt;p&gt;You can use * this to retrieve a new PendingIntent when you are only changing the * extra data in the Intent; by canceling the previous pending intent, * this ensures that only entities given the new data will be able to * launch it. If this assurance is not an issue, consider * {@link #FLAG_UPDATE_CURRENT}." />
      <item value="Flag indicating that if the described PendingIntent does not * already exist, then simply return null instead of creating it. * For use with {@link #getActivity}, {@link #getBroadcast}, and * {@link #getService}." />
      <item value="is called on it, it will be automatically * canceled for you and any future attempt to send through it will fail." />
      <item value="Notification category: incoming call (voice or video) or similar synchronous communication request." />
      <item value="This method returns a historically correct offset value if an * underlying TimeZone implementation subclass supports historical * Daylight Saving Time schedule and GMT offset changes." />
      <item value="Returns the offset of this time zone from UTC at the specified * date. If Daylight Saving Time is in effect at the specified * date, the offset value is adjusted with the amount of daylight * saving." />
      <item value="the amount of time in milliseconds to add to UTC to get local time." />
      <item value="the date represented in milliseconds since January 1, 1970 00:00:00 GMT" />
      <item value="the offset in milliseconds to add to GMT to get local time." />
      <item value="Queries if the given {@code date} is in Daylight Saving Time in * this time zone." />
      <item value="설정하지 않았습니다." />
      <item value="there were 2 unresolved references to classes or interfaces." />
      <item value="A small piece of additional information pertaining to this notification. * * The platform template will draw this on the last line of the notification, at the far * right (to the right of a smallIcon if it has been placed there). * * @deprecated use {@link #setSubText(CharSequence)} instead to set a text in the header. * For legacy apps targeting a version below {@link android.os.Build.VERSION_CODES#N} this * field will still show up, but the subtext will take precedence." />
      <item value="Provides text that will appear as a link to your application's settings. * * &lt;p&gt;This text does not appear within notification {@link Style templates} but may * appear when the user uses an affordance to learn more about the notification. * Additionally, this text will not appear unless you provide a valid link target by * handling {@link #INTENT_CATEGORY_NOTIFICATION_PREFERENCES}. * * &lt;p&gt;This text is meant to be concise description about what the user can customize * when they click on this link. The recommended maximum length is 40 characters." />
      <item value="Set the second line of text in the platform notification template." />
      <item value="&lt;p&gt;As of {@link android.os.Build.VERSION_CODES#N} this information is displayed in the * notification header area. * * On Android versions before {@link android.os.Build.VERSION_CODES#N} * this will be shown in the third line of text in the platform notification template. * You should not be using {@link #setProgress(int, int, boolean)} at the * same time on those versions; they occupy the same place." />
      <item value="This provides some additional information that is displayed in the notification. No * guarantees are given where exactly it is displayed. * * &lt;p&gt;This information should only be provided if it provides an essential * benefit to the understanding of the notification. The more text you provide the * less readable it becomes. For example, an email client should only provide the account * name here if more than one email account has been added.&lt;/p&gt;" />
      <item value="Flag indicating that if the described PendingIntent already exists, * then keep it but replace its extra data with what is in this new * Intent. For use with {@link #getActivity}, {@link #getBroadcast}, and * {@link #getService}. &lt;p&gt;This can be used if you are creating intents where only the * extras change, and don't care that any entities that received your * previous PendingIntent will be able to launch it with your new * extras even if they are not explicitly given to it." />
      <item value="The intent to execute when the expanded status entry is clicked. If * this is an activity, it must include the" />
      <item value="The intent to execute when the expanded status entry is clicked. If * this is an activity, it must include the * {@link android.content.Intent#FLAG_ACTIVITY_NEW_TASK} flag, which requires * that you take care of task management as described in the * &lt;a href=&quot;{@docRoot}guide/topics/fundamentals/tasks-and-back-stack.html&quot;&gt;Tasks and Back * Stack&lt;/a&gt; document. In particular, make sure to read the notification section * &lt;a href=&quot;{@docRoot}guide/topics/ui/notifiers/notifications.html#HandlingNotifications&quot;&gt;Handling * Notifications&lt;/a&gt; for the correct ways to launch an application from a * notification." />
      <item value="Retrieve a PendingIntent that will start a service, like calling * {@link Context#startService Context.startService()}. The start * arguments given to the service will come from the extras of the Intent." />
      <item value="&lt;p class=&quot;note&quot;&gt;For security reasons, the {@link android.content.Intent} * you supply here should almost always be an &lt;em&gt;explicit intent&lt;/em&gt;, * that is specify an explicit component to be delivered to through * {@link Intent#setClass(android.content.Context, Class) Intent.setClass}&lt;/p&gt;" />
      <item value="Intent#fillIn Intent.fillIn()} to control which unspecified parts * of the intent that can be supplied when the actual send happens." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="137" />
        <entry key="ENGLISH" value="138" />
        <entry key="KOREAN" value="13" />
        <entry key="JAPANESE" value="1" />
      </map>
    </option>
  </component>
</application>