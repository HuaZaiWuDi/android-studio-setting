<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="373" />
    <option name="newTranslationDialogX" value="572" />
    <option name="newTranslationDialogY" value="129" />
    <histories>
      <item value="Width as measured during measure pass." />
      <item value="Like getMeasuredWidthAndState(), but only returns the raw width component (that is the result is masked by MEASURED_SIZE_MASK). Returns: The raw measured width of this view." />
      <item value="MEASURED SIZE MASK" />
      <item value="Total space occupied by this view in the perpendicular orientation to current one" />
      <item value="Returns the space occupied by this View in the perpendicular orientation including decorations and margins." />
      <item value="Returns the space occupied by this View in the current orientation including decorations and margins." />
      <item value="百分比" />
      <item value="bai'fen'b" />
      <item value="baifenb" />
      <item value="baifbai'fen'b" />
      <item value="Returns: true if the animation has started, false otherwise" />
      <item value="commit Callback" />
      <item value="consumed – Output. If not null, consumed[0] will contain the consumed component of dx and consumed[1] the consumed dy." />
      <item value="Dispatch one step of a nested scroll in progress before this view consumes any portion of it. Nested pre-scroll events are to nested scroll events what touch intercept is to touch. dispatchNestedPreScroll offers an opportunity for the parent view in a nested scrolling operation to consume some or all of the scroll operation before the child view consumes it. Params: dx – Horizontal scroll distance in pixels dy – Vertical scroll distance in pixels consumed – Output. If not null, consumed[0] will contain the consumed component of dx and consumed[1] the consumed dy. offsetInWindow – Optional. If not null, on return this will contain the offset in local view coordinates of this view from before this operation to after it completes. View implementations may use this to adjust expected input coordinate tracking. type – the type of input which cause this scroll event Returns: true if the parent consumed some or all of the scroll delta" />
      <item value="Returns: true if the event was dispatched, false if it could not be dispatched." />
      <item value="Dispatch one step of a nested scroll in progress before this view consumes any portion of it. Nested pre-scroll events are to nested scroll events what touch intercept is to touch. dispatchNestedPreScroll offers an opportunity for the parent view in a nested scrolling operation to consume some or all of the scroll operation before the child view consumes it." />
      <item value="Dispatch one step of a nested scroll in progress. Implementations of views that support nested scrolling should call this to report info about a scroll in progress to the current nested scrolling parent. If a nested scroll is not currently in progress or nested scrolling is not enabled for this view this method does nothing. Compatible View implementations should also call dispatchNestedPreScroll before consuming a component of the scroll event themselves." />
      <item value="axes – Flags consisting of a combination of ViewCompat.SCROLL_AXIS_HORIZONTAL andor ViewCompat.SCROLL_AXIS_VERTICAL. type – the type of input which cause this scroll event" />
      <item value="The original nested scrolling child (where the input events were received to start the scroll) must provide a non-null consumed parameter with values {0, 0}." />
      <item value="Dispatch one step of a nested scroll in progress. Implementations of views that support nested scrolling should call this to report info about a scroll in progress to the current nested scrolling parent. If a nested scroll is not currently in progress or nested scrolling is not enabled for this view this method does nothing. Compatible View implementations should also call dispatchNestedPreScroll before consuming a component of the scroll event themselves. The original nested scrolling child (where the input events were received to start the scroll) must provide a non-null consumed parameter with values {0, 0}." />
      <item value="true if the parent consumed some or all of the scroll delta" />
      <item value="clamp" />
      <item value="Set the scrolled position of your view. This will cause a call to onScrollChanged(int, int, int, int) and the view will be invalidated." />
      <item value="Dispatch one step of a nested scroll in progress before this view consumes any portion of it. Nested pre-scroll events are to nested scroll events what touch intercept is to touch. dispatchNestedPreScroll offers an opportunity for the parent view in a nested scrolling operation to consume some or all of the scroll operation before the child view consumes it. Params: dx – Horizontal scroll distance in pixels dy – Vertical scroll distance in pixels consumed – Output. If not null, consumed[0] will contain the consumed component of dx and consumed[1] the consumed dy. offsetInWindow – Optional. If not null, on return this will contain the offset in local view coordinates of this view from before this operation to after it completes. View implementations may use this to adjust expected input coordinate tracking. type – the type of input which cause this scroll event Returns: true if the parent consumed some or all of the scroll delta See Also: dispatchNestedScroll(int, int, int, int, int[], int)" />
      <item value="offsetInWindow – Optional. If not null, on return this will contain the offset in local view coordinates of this view from before this operation to after it completes. View implementations may use this to adjust expected input coordinate tracking. type – the type of input which cause this scroll event" />
      <item value="dx – Horizontal scroll distance in pixels dy – Vertical scroll distance in pixels consumed – Output. If not null, consumed[0] will contain the consumed component of dx and consumed[1] the consumed dy." />
      <item value="dx – Horizontal scroll distance in pixels dy – Vertical scroll distance in pixels" />
      <item value="dx – Horizontal scroll distance in pixels" />
      <item value="Dispatch one step of a nested scroll in progress." />
      <item value="Dispatch one step of a nested scroll in progress before this view consumes any portion of it." />
      <item value="Set whether arrow scrolling will animate its transition. Params: smoothScrollingEnabled – whether arrow scrolling will animate its transition" />
      <item value="Set whether this ScrollView should stretch its content height to fill the viewport or not. Params: fillViewport – True to stretch the content's height to the viewport's boundaries, false otherwise." />
      <item value="set Fill Viewport" />
      <item value="on Nested Scroll" />
      <item value="offset In Window" />
      <item value="dx Unconsumed" />
      <item value="dx Consumed" />
      <item value="dispatch Nested Scroll" />
      <item value="Interface definition for a callback to be invoked when the scroll X or Y positions of a view change. This version of the interface works on all versions of Android, back to API v4." />
      <item value="NestedScrollView is just like ScrollView, but it supports acting as both a nested scrolling parent and child on both new and old versions of Android. Nested scrolling is enabled by default." />
      <item value="Defines over-scrolling behavior. This property is used only if the View is scrollable. Over-scrolling is the ability for the user to receive feedback when attempting to scroll beyond meaningful content." />
      <item value="Contact is detected" />
      <item value="Returns a list of all elements sorted according to their natural sort order." />
      <item value="特殊统计" />
      <item value="Indicates whether this animation has started or not. Returns: true if the animation has started, false otherwise" />
      <item value="ndicates whether this animation has ended or not. Returns: true if the animation has ended, false otherwise" />
      <item value="If fillEnabled is true, this animation will apply the value of fillBefore. Returns: true if the animation will take fillBefore into account" />
      <item value="is Selecting" />
      <item value="Operation not permitted" />
      <item value="origin Data" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2906" />
        <entry key="ENGLISH" value="2907" />
        <entry key="CHINESE_TRADITIONAL" value="6" />
        <entry key="BASQUE" value="1" />
        <entry key="RUSSIAN" value="6" />
        <entry key="FRENCH" value="2" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="KOREAN" value="12" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="2" />
        <entry key="LATIN" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="SPANISH" value="3" />
        <entry key="ITALIAN" value="2" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1661741742603" />
  </component>
</application>