<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="373" />
    <option name="newTranslationDialogX" value="572" />
    <option name="newTranslationDialogY" value="129" />
    <histories>
      <item value="EXACTLY" />
      <item value="Measure specification mode: The child can be as large as it wants up to the specified size." />
      <item value="Measure specification mode: The parent has determined an exact size for the child. The child is going to be given those bounds regardless of how big it wants to be." />
      <item value="Measure specification mode: The parent has not imposed any constraint on the child. It can be whatever size it wants." />
      <item value="available Space In Other" />
      <item value="Measures a child with currently known information. This is not necessarily the child's final measurement. (see fillChunk for details). Params: view – The child view to be measured otherDirParentSpecMode – The RV measure spec that should be used in the secondary orientation alreadyMeasured – True if we've already measured this view once" />
      <item value="Calculate a MeasureSpec value for measuring a child view in one dimension. Params: parentSize – Size of the parent view where the child will be placed parentMode – The measurement spec mode of the parent padding – Total space currently consumed by other elements of parent childDimension – Desired size of the child view, or MATCH_PARENTWRAP_CONTENT. Generally obtained from the child view's LayoutParams canScroll – true if the parent RecyclerView can scroll in this dimension Returns: a MeasureSpec value for the child view" />
      <item value="Creates a measure specification based on the supplied size and mode. The mode must always be one of the following: UNSPECIFIED EXACTLY AT_MOST Note: On API level 17 and lower, makeMeasureSpec's implementation was such that the order of arguments did not matter and overflow in either value could impact the resulting MeasureSpec. android.widget.RelativeLayout was affected by this bug. Apps targeting API levels greater than 17 will get the fixed, more strict behavior. Params: size – the size of the measure specification mode – the mode of the measure specification Returns: the measure specification based on size and mode" />
      <item value="Views that did not measure the maxSize has to be re-measured We will stop doing this once we introduce Gravity in the GLM layout params" />
      <item value="The background owner should be elevated so that it casts a shadow." />
      <item value="Specifies the elevation for this popup window. Params: elevation – the popup's elevation in pixels" />
      <item value="on Intercept Touch Event" />
      <item value="Width as measured during measure pass." />
      <item value="Like getMeasuredWidthAndState(), but only returns the raw width component (that is the result is masked by MEASURED_SIZE_MASK). Returns: The raw measured width of this view." />
      <item value="MEASURED SIZE MASK" />
      <item value="Total space occupied by this view in the perpendicular orientation to current one" />
      <item value="Returns the space occupied by this View in the perpendicular orientation including decorations and margins." />
      <item value="Returns the space occupied by this View in the current orientation including decorations and margins." />
      <item value="百分比" />
      <item value="bai'fen'b" />
      <item value="baifenb" />
      <item value="baifbai'fen'b" />
      <item value="Returns: true if the animation has started, false otherwise" />
      <item value="commit Callback" />
      <item value="consumed – Output. If not null, consumed[0] will contain the consumed component of dx and consumed[1] the consumed dy." />
      <item value="Dispatch one step of a nested scroll in progress before this view consumes any portion of it. Nested pre-scroll events are to nested scroll events what touch intercept is to touch. dispatchNestedPreScroll offers an opportunity for the parent view in a nested scrolling operation to consume some or all of the scroll operation before the child view consumes it. Params: dx – Horizontal scroll distance in pixels dy – Vertical scroll distance in pixels consumed – Output. If not null, consumed[0] will contain the consumed component of dx and consumed[1] the consumed dy. offsetInWindow – Optional. If not null, on return this will contain the offset in local view coordinates of this view from before this operation to after it completes. View implementations may use this to adjust expected input coordinate tracking. type – the type of input which cause this scroll event Returns: true if the parent consumed some or all of the scroll delta" />
      <item value="Returns: true if the event was dispatched, false if it could not be dispatched." />
      <item value="Dispatch one step of a nested scroll in progress before this view consumes any portion of it. Nested pre-scroll events are to nested scroll events what touch intercept is to touch. dispatchNestedPreScroll offers an opportunity for the parent view in a nested scrolling operation to consume some or all of the scroll operation before the child view consumes it." />
      <item value="Dispatch one step of a nested scroll in progress. Implementations of views that support nested scrolling should call this to report info about a scroll in progress to the current nested scrolling parent. If a nested scroll is not currently in progress or nested scrolling is not enabled for this view this method does nothing. Compatible View implementations should also call dispatchNestedPreScroll before consuming a component of the scroll event themselves." />
      <item value="axes – Flags consisting of a combination of ViewCompat.SCROLL_AXIS_HORIZONTAL andor ViewCompat.SCROLL_AXIS_VERTICAL. type – the type of input which cause this scroll event" />
      <item value="The original nested scrolling child (where the input events were received to start the scroll) must provide a non-null consumed parameter with values {0, 0}." />
      <item value="Dispatch one step of a nested scroll in progress. Implementations of views that support nested scrolling should call this to report info about a scroll in progress to the current nested scrolling parent. If a nested scroll is not currently in progress or nested scrolling is not enabled for this view this method does nothing. Compatible View implementations should also call dispatchNestedPreScroll before consuming a component of the scroll event themselves. The original nested scrolling child (where the input events were received to start the scroll) must provide a non-null consumed parameter with values {0, 0}." />
      <item value="true if the parent consumed some or all of the scroll delta" />
      <item value="clamp" />
      <item value="Set the scrolled position of your view. This will cause a call to onScrollChanged(int, int, int, int) and the view will be invalidated." />
      <item value="Dispatch one step of a nested scroll in progress before this view consumes any portion of it. Nested pre-scroll events are to nested scroll events what touch intercept is to touch. dispatchNestedPreScroll offers an opportunity for the parent view in a nested scrolling operation to consume some or all of the scroll operation before the child view consumes it. Params: dx – Horizontal scroll distance in pixels dy – Vertical scroll distance in pixels consumed – Output. If not null, consumed[0] will contain the consumed component of dx and consumed[1] the consumed dy. offsetInWindow – Optional. If not null, on return this will contain the offset in local view coordinates of this view from before this operation to after it completes. View implementations may use this to adjust expected input coordinate tracking. type – the type of input which cause this scroll event Returns: true if the parent consumed some or all of the scroll delta See Also: dispatchNestedScroll(int, int, int, int, int[], int)" />
      <item value="offsetInWindow – Optional. If not null, on return this will contain the offset in local view coordinates of this view from before this operation to after it completes. View implementations may use this to adjust expected input coordinate tracking. type – the type of input which cause this scroll event" />
      <item value="dx – Horizontal scroll distance in pixels dy – Vertical scroll distance in pixels consumed – Output. If not null, consumed[0] will contain the consumed component of dx and consumed[1] the consumed dy." />
      <item value="dx – Horizontal scroll distance in pixels dy – Vertical scroll distance in pixels" />
      <item value="dx – Horizontal scroll distance in pixels" />
      <item value="Dispatch one step of a nested scroll in progress." />
      <item value="Dispatch one step of a nested scroll in progress before this view consumes any portion of it." />
      <item value="Set whether arrow scrolling will animate its transition. Params: smoothScrollingEnabled – whether arrow scrolling will animate its transition" />
      <item value="Set whether this ScrollView should stretch its content height to fill the viewport or not. Params: fillViewport – True to stretch the content's height to the viewport's boundaries, false otherwise." />
      <item value="set Fill Viewport" />
      <item value="on Nested Scroll" />
      <item value="offset In Window" />
      <item value="dx Unconsumed" />
      <item value="dx Consumed" />
      <item value="dispatch Nested Scroll" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2918" />
        <entry key="ENGLISH" value="2919" />
        <entry key="CHINESE_TRADITIONAL" value="6" />
        <entry key="BASQUE" value="1" />
        <entry key="RUSSIAN" value="6" />
        <entry key="FRENCH" value="2" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="KOREAN" value="12" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="2" />
        <entry key="LATIN" value="1" />
        <entry key="LUXEMBOURGISH" value="1" />
        <entry key="SPANISH" value="3" />
        <entry key="ITALIAN" value="2" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1661741742603" />
  </component>
</application>