<application>
  <component name="AppStorage">
    <histories>
      <item value="&gt;Rounds a date, leaving the field specified as the most * significant field.&lt;" />
      <item value="the different rounded date, not null" />
      <item value="number of days within the fragment of date" />
      <item value="Gets a Calendar fragment for any unit." />
      <item value="number of units within the fragment of the calendar" />
      <item value="Checks if two date objects represent the same instant in time.&lt;/p&gt;" />
      <item value="The default implementation of this method returns 0, making the assumption of * a single view type for the adapter. Unlike ListView adapters, types need not * be contiguous. Consider using id resources to uniquely identify item view types." />
      <item value="Return the view type of the item at &lt;code&gt;position&lt;/code&gt; for the purposes * of view recycling." />
      <item value="Returns a hash code value for the object. The general contract of `hashCode` is:" />
      <item value="Enumeration of the style of text formatting and parsing." />
      <item value="MAGNET" />
      <item value="Motion Detected" />
      <item value="昨天" />
      <item value="Adds or subtracts the specified amount of time to the given calendar field, * based on the calendar's rules. For example, to subtract 5 days from * the current time of the calendar, you can achieve it by calling:" />
      <item value="access" />
      <item value="The notification starts the callback and loads more */" />
      <item value="Continuous" />
      <item value="Timer" />
      <item value="timer" />
      <item value="times" />
      <item value="time" />
      <item value="连续" />
      <item value="cl sms Log" />
      <item value="Manual" />
      <item value="log" />
      <item value="Log" />
      <item value="detection" />
      <item value="privacy protection" />
      <item value="Check the device conditions for Smart Security\n&quot; + &quot;[Myhome door sensor] It is opened.\n&quot; + &quot;[Myhome motion sensor] Network connection is failed.\n&quot; + &quot;Will you activate Myguard Smart Security?" />
      <item value="Motion" />
      <item value="Reasons" />
      <item value="All security devices are offline" />
      <item value="Returns a Single that emits the single item emitted by this Observable if this Observable * emits only a single item, otherwise * if this Observable completes without emitting any items or emits more than one item a * {@link NoSuchElementException} or {@code IllegalArgumentException} will be signalled respectively." />
      <item value="Normally, an ObservableSource that returns multiple items will do so by invoking its {@link Observer}'s * {@link Observer#onNext onNext} method for each such item. You can change this behavior, instructing the * ObservableSource to compose a list of all of these items and then to invoke the Observer's {@code onNext} * function once, passing it the entire list, by calling the ObservableSource's {@code toList} method prior to * calling its {@link #subscribe} method." />
      <item value="a Single that emits a single item: a List containing all of the items emitted by the source * ObservableSource" />
      <item value="Bonjour" />
      <item value="an Observable that emits only those items emitted by the source ObservableSource that the filter * evaluates as {@code true}" />
      <item value="Returns a Single that emits a single item, a list composed of all the items emitted by the * finite source ObservableSource." />
      <item value="the period of time each buffer collects items before it is emitted and replaced with a new * buffer" />
      <item value="When inputting prohibited specific characters" />
      <item value="round" />
      <item value="Specific" />
      <item value="Autowired" />
      <item value="Fields from build type: debug" />
      <item value="solve" />
      <item value="原始" />
      <item value="原始的" />
      <item value="Changed" />
      <item value="Set a special listener to be called when an action is performed * on the text view. This will be called when the enter key is pressed, * or when an action supplied to the IME is selected by the user. Setting * this means that the normal hard key event will not insert a newline * into the text view, even if it is multi-line; holding down the ALT * modifier will, however, allow the user to insert a newline character." />
      <item value="Returns whether the soft input method will be made visible when this * TextView gets focused. The default is true." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="276" />
        <entry key="ENGLISH" value="277" />
        <entry key="FRENCH" value="4" />
        <entry key="CATALAN" value="1" />
        <entry key="ZULU" value="1" />
        <entry key="JAPANESE" value="2" />
        <entry key="ITALIAN" value="1" />
        <entry key="VIETNAMESE" value="2" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>