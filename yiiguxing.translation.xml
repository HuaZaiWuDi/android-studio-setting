<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="373" />
    <option name="newTranslationDialogX" value="572" />
    <option name="newTranslationDialogY" value="129" />
    <histories>
      <item value="Adds the given transport requirement to this builder. These represent the set of allowed transports for the request. Only networks using one of these transports will satisfy the request. If no particular transports are required, none should be specified here. Params: transportType – The transport type to add." />
      <item value="Set the NetworkCapabilities for this builder instance, overriding any capabilities that had been previously set." />
      <item value="Add the given capability requirement to this builder. These represent the requested network's required capabilities. Note that when searching for a network to satisfy a request, all capabilities requested must be satisfied. Params: capability – The capability to add." />
      <item value="add Capability" />
      <item value="A NetworkRequest as used by the system can be one of the following types: - LISTEN, for which the framework will issue callbacks about any and all networks that match the specified NetworkCapabilities, - REQUEST, capable of causing a specific network to be created first (e.g. a telephony DUN request), the framework will issue callbacks about the single, highest scoring current network (if any) that matches the specified NetworkCapabilities, or - TRACK_DEFAULT, a hybrid of the two designed such that the framework will issue callbacks for the single, highest scoring current network (if any) that matches the capabilities of the default Internet request (mDefaultRequest), but which cannot cause the framework to either create or retain the existence of any specific network. Note that from the point of view of the request matching code, TRACK_DEFAULT is identical to REQUEST: its special behaviour is not due to different semantics, but to the fact that the system will only ever create a TRACK_DEFAULT with capabilities that are identical to the default request's capabilities, thus causing it to share fate in every way with the default request. - BACKGROUND_REQUEST, like REQUEST but does not cause any networks to retain the NET_CAPABILITY_FOREGROUND capability. A network with no foreground requests is in the background. A network that has one or more background requests and loses its last foreground request to a higher-scoring network will not go into the background immediately, but will linger and go into the background after the linger timeout. - The value NONE is used only by applications. When an application creates a NetworkRequest, it does not have a type; the type is set by the system depending on the method used to file the request (requestNetwork, registerNetworkCallback, etc.)." />
      <item value="Create a specifier object used to request a local Wi-Fi network. The generated NetworkSpecifier should be used in NetworkRequest.Builder.setNetworkSpecifier(NetworkSpecifier) when building the NetworkRequest. These specifiers can only be used to request a local wifi network (i.e no internet capability). So, the device will not switch it's default route to wifi if there are other transports (cellular for example) available. Note: Apps can set a combination of network match params: SSID Pattern using setSsidPattern(PatternMatcher) OR Specific SSID using setSsid(String). ANDOR BSSID Pattern using setBssidPattern(MacAddress, MacAddress) OR Specific BSSID using setBssid(MacAddress) to trigger connection to a network that matches the set params. The system will find the set of networks matching the request and present the user with a system dialog which will allow the user to select a specific Wi-Fi network to connect to or to deny the request. For example: To connect to an open network with a SSID prefix of &quot;test&quot; and a BSSID OUI of &quot;10:03:23&quot;: final NetworkSpecifier specifier = new Builder() .setSsidPattern(new PatternMatcher(&quot;test&quot;, PatterMatcher.PATTERN_PREFIX)) .setBssidPattern(MacAddress.fromString(&quot;10:03:23:00:00:00&quot;), MacAddress.fromString(&quot;ff:ff:ff:00:00:00&quot;)) .build() final NetworkRequest request = new NetworkRequest.Builder() .addTransportType(NetworkCapabilities.TRANSPORT_WIFI) .removeCapability(NetworkCapabilities.NET_CAPABILITY_INTERNET) .setNetworkSpecifier(specifier) .build(); final ConnectivityManager connectivityManager = context.getSystemService(Context.CONNECTIVITY_SERVICE); final NetworkCallback networkCallback = new NetworkCallback() { ... {@literal @}Override void onAvailable(...) {} etc. }; connectivityManager.requestNetwork(request, networkCallback);" />
      <item value="indeterminate Only" />
      <item value="solid" />
      <item value="Returns a new BigDecimal instance with the specified scale. If the new scale is greater than the old scale, then additional zeros are added to the unscaled value. In this case no rounding is necessary. If the new scale is smaller than the old scale, then trailing digits are removed. If these trailing digits are not zero, then the remaining unscaled value has to be rounded. For this rounding operation the specified rounding mode is used. Params: newScale – scale of the result returned. roundingMode – rounding mode to be used to round the result. Returns: a new BigDecimal instance with the specified scale." />
      <item value="Cannot add the same observer with different lifecycles" />
      <item value="Scroll vertically by dy pixels in screen coordinates and return the distance traveled. The default implementation does nothing and returns 0." />
      <item value="Horizontal start direction. Resolved to LEFT or RIGHT depending on RecyclerView's layout direction. Used for swipe &amp; drag control." />
      <item value="Notify the widget that refresh state has changed. Do not call this when refresh is triggered by a swipe gesture." />
      <item value="Whether or not the view should show refresh progress." />
      <item value="context - the context of the coroutine. The default value is an event loop on the current thread. block - the coroutine code." />
      <item value="Runs a new coroutine and blocks the current thread interruptibly until its completion. This function should not be used from a coroutine. It is designed to bridge regular blocking code to libraries that are written in suspending style, to be used in main functions and in tests." />
      <item value="autofill Client Run On Ui Thread" />
      <item value="Runs the specified action on the UI thread. If the current thread is the UI thread, then the action is executed immediately. If the current thread is not the UI thread, the action is posted to the event queue of the UI thread. Params: action – the action to run on the UI thread" />
      <item value="Cannot access database on the main thread since it may potentially lock the UI for a long period of time." />
      <item value="Attempt to invoke interface method 'void java.util.concurrent.Executor.execute(java.lang.Runnable)' on a null object reference" />
      <item value="device Info Ready" />
      <item value="sign sensor setting" />
      <item value="sign sensor gesture setting" />
      <item value="自检" />
      <item value="z" />
      <item value="A view is currently settling into place as a result of a fling or predefined non-interactive motion." />
      <item value="Indicates that a drawer is in the process of settling to a final position." />
      <item value="预览" />
      <item value="yu'lan" />
      <item value="yuyu'lan" />
      <item value="重复" />
      <item value="转换" />
      <item value="zha" />
      <item value="后一个" />
      <item value="前一个" />
      <item value="fading Edge" />
      <item value="requires Fading Edge" />
      <item value="Boolean that controls whether a view should have sound effects enabled for events such as clicking and touching." />
      <item value="Occupancy Sensor" />
      <item value="Create a new non focusable popup window which can display the contentView. The dimension of the window are (0,0). The popup does not provide any background. This should be handled by the content view. Params: contentView – the popup's content" />
      <item value="Recommend Panel" />
      <item value="格式" />
      <item value="high Light masking" />
      <item value="Particulate Matter Sensor" />
      <item value="Room cannot verify the data integrity. Looks like you've changed schema but forgot to update the version number. You can simply fix this by increasing the version number." />
      <item value="The list of Primary Key column names. If you would like to define an auto generated primary key, you can use PrimaryKey annotation on the field with PrimaryKey.autoGenerate() set to true. Returns: The primary key of this Entity. Can be empty if the class has a field annotated with PrimaryKey." />
      <item value="组合&#10;" />
      <item value="组合" />
      <item value="z组合" />
      <item value="Only 'const val' can be used in constant expressions" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2112" />
        <entry key="ENGLISH" value="2113" />
        <entry key="CHINESE_TRADITIONAL" value="6" />
        <entry key="BASQUE" value="1" />
        <entry key="RUSSIAN" value="4" />
        <entry key="FRENCH" value="2" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="KOREAN" value="11" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="SPANISH" value="3" />
        <entry key="ITALIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1654481277778" />
  </component>
</application>