<application>
  <component name="AppStorage">
    <histories>
      <item value="an arbitrary object that specifies security * information about the origin or owner of the script. For * implementations that don't care about security, this value * may be null." />
      <item value="the starting line number" />
      <item value="Initialize the standard objects." />
      <item value="The optimization level is expected to be an integer between -1 and * 9. Any negative values will be interpreted as -1, and any values * greater than 9 will be interpreted as 9. * An optimization level of -1 indicates that interpretive mode will * always be used. Levels 0 through 9 indicate that class files may * be generated. Higher optimization levels trade off compile time * performance for runtime performance. * The optimizer level can't be set greater than -1 if the optimizer * package doesn't exist at run time." />
      <item value="disable compilation" />
      <item value="Convenient method to convert java value to its closest representation * in JavaScript." />
      <item value="Initialize the standard objects. * * Creates instances of the standard objects and their constructors * (Object, String, Number, Date, etc.), setting up 'scope' to act * as a global object as in ECMA 15.1.&lt;p&gt; * * This method must be called to initialize a scope before scripts * can be evaluated in that scope.&lt;p&gt; * * This method does not affect the Context it is called upon. * * @return the initialized scope" />
      <item value="Extension" />
      <item value="启动" />
      <item value="频道" />
      <item value="Excelerator" />
      <item value="The Python plug-in provides smart editing for Python scripts. The feature set of the plugin corresponds to PyCharm IDE Community Edition." />
      <item value="stdin" />
      <item value="Note that backslashes ({@code \}) and dollar signs ({@code $}) in the * replacement string may cause the results to be different than if it were * being treated as a literal replacement string; see * {@link java.util.regex.Matcher#replaceAll Matcher.replaceAll}. * Use {@link java.util.regex.Matcher#quoteReplacement} to suppress the special * meaning of these characters, if desired." />
      <item value="the string to be substituted for each match" />
      <item value="the regular expression to which this string is to be matched" />
      <item value="Returns `true` if this string is equal to the contents of the specified [CharSequence], `false` otherwise." />
      <item value="Unmarshalling unknown type code 7667827 at offset 1896" />
      <item value="SUPPORT ETHERNET" />
      <item value=" Element instance has no attribute 'data'" />
      <item value="most recent call last" />
      <item value="Entry of an operation on the fragment back stack." />
      <item value="Alternate constructor that can be used to provide a default layout * that will be inflated by {@link #onCreateView(LayoutInflater, ViewGroup, Bundle)}." />
      <item value="instantiate" />
      <item value="bypassing the {@link Class#forName(String)} calls when passed the same * class name again." />
      <item value="if the specified element is null and this * list does not permit null elements" />
      <item value="Removes the first occurrence of the specified element from this list, * if it is present (optional operation). If this list does not contain * the element, it is unchanged. More formally, removes the element with * the lowest index &lt;tt&gt;i&lt;/tt&gt; such that * &lt;tt&gt;(o==null&amp;nbsp;?&amp;nbsp;get(i)==null&amp;nbsp;:&amp;nbsp;o.equals(get(i)))&lt;/tt&gt; * (if such an element exists). Returns &lt;tt&gt;true&lt;/tt&gt; if this list * contained the specified element (or equivalently, if this list changed * as a result of the call)." />
      <item value="retained" />
      <item value="Called when the fragment is visible to the user and actively running. * This is generally * tied to {@link Activity#onResume() Activity.onResume} of the containing * Activity's lifecycle." />
      <item value="You &lt;em&gt;cannot&lt;/em&gt; receive this through components declared in * manifests, only by explicitly registering for it with * {@link Context#registerReceiver(BroadcastReceiver, IntentFilter) * Context.registerReceiver()}. *" />
      <item value="Hilt" />
      <item value="Dagger" />
      <item value="SSL handshake aborted: ssl=0xaf94c7a8: I/O error during system call, Connection reset by peer" />
      <item value="local data Key flow protection" />
      <item value="Reachable" />
      <item value="the default item to signal in Single if this Maybe is empty" />
      <item value="Converts this Maybe into a Single instance composing disposal * through and turning an empty Maybe into a Single that emits the given * value through onSuccess." />
      <item value="Converts this Maybe into a Single instance composing disposal * through and turning an empty Maybe into a signal of NoSuchElementException." />
      <item value="Cannot read property 'length' of undefined&quot;, source:" />
      <item value="长度" />
      <item value="The default interactive shell is now zsh. To update your account to use zsh, please run `chsh -s /bin/zsh`. " />
      <item value="exception decoding Hex string: invalid characters encountered in Hex string" />
      <item value="constrained" />
      <item value="judge" />
      <item value="Configing" />
      <item value="Sets whether this dialog is cancelable with the" />
      <item value="rating" />
      <item value="Sets the number of stars to show. In order for these to be shown * properly, it is recommended the layout width of this widget be wrap * content." />
      <item value="Available" />
      <item value="可空" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="811" />
        <entry key="ENGLISH" value="812" />
        <entry key="FRENCH" value="1" />
        <entry key="KOREAN" value="92" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="JAPANESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>