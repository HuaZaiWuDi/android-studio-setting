<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="373" />
    <option name="newTranslationDialogX" value="572" />
    <option name="newTranslationDialogY" value="129" />
    <histories>
      <item value="Speaker" />
      <item value="Sweeping Robot" />
      <item value="Returns if the specified attribute was not in input was declared in XML. If parser is non-validating it MUST always return false. This information is part of XML infoset: Params: index – zero-based index of attribute Returns: false if attribute was in input" />
      <item value="Off Switch" />
      <item value="Copies all of the elements from one list into another. After the operation, the index of each copied element in the destination list will be identical to its index in the source list. The destination list must be at least as long as the source list. If it is longer, the remaining elements in the destination list are unaffected." />
      <item value="list – The list in which to swap elements. i – the index of one element to be swapped. j – the index of the other element to be swapped." />
      <item value="备份" />
      <item value="ou should not lock orientation of your activities, so that you can support a good user experience for any device or orientation" />
      <item value="Buffering" />
      <item value="音箱" />
      <item value="Parcelable encountered IOException writing serializable object" />
      <item value="Called when a fragment is attached as a child of this fragment. This is called after the attached fragment's onAttach and before the attached fragment's onCreate if the fragment has not yet had a previous call to onCreate. Params: childFragment – child fragment being attached" />
      <item value="shortCut" />
      <item value="点击传递长按" />
      <item value="点击传递" />
      <item value="点击" />
      <item value="LINEAR GRADIENT" />
      <item value="RADIAL GRADIENT" />
      <item value="SWEEP GRADIENT" />
      <item value="sweep" />
      <item value="radial" />
      <item value="全局" />
      <item value="无权限" />
      <item value="wu" />
      <item value="is Delete Or Un Permission" />
      <item value="Window flag: intended for windows that will often be used when the user is holding the screen against their face, it will aggressively filter the event stream to prevent unintended presses in this situation that may not be desired for a particular window, when such an event stream is detected, the application will receive a CANCEL motion event to indicate this so applications can handle this accordingly by taking no action on the event until the finger is released." />
      <item value="Cheek" />
      <item value="Press" />
      <item value="Ignore Cheek Press" />
      <item value="Set the flag on popup to ignore cheek press events; by default this flag is set to false which means the popup will not ignore cheek press dispatch events. If the popup is showing, calling this method will take effect only the next time the popup is shown or through a manual call to one of the update() methods." />
      <item value="Set whether this window is touch modal or if outside touches will be sent to other windows behind it. If the popup is showing, calling this method will take effect only the next time the popup is shown or through a manual call to one of the update() methods. Params: touchModal – true to sent all outside touches to this window, false to other windows behind it" />
      <item value="Indicates whether outside touches will be sent to this window or other windows behind it" />
      <item value="This will attach the popup window to the decor frame of the parent window to avoid overlaping with screen decorations like the navigation bar. Overrides the default behavior of the flag WindowManager.LayoutParams.FLAG_LAYOUT_ATTACHED_IN_DECOR." />
      <item value="enabled – true if the split touches should be enabled, false otherwise" />
      <item value="Allows the popup window to split touches across other windows that also support split touch. When this flag is false, the first pointer that goes down determines the window to which all subsequent touches go until all pointers go up. When this flag is true, each pointer (not necessarily the first) that goes down determines the window to which all subsequent touches of that pointer will go until that pointer goes up thereby enabling touches with multiple pointers to be split across multiple windows." />
      <item value="Allow PopupWindow to scroll the anchor's parent to provide more room for the popup. Enabled by default." />
      <item value="Indicates whether clipping of the popup window is enabled. Returns: true if the clipping is enabled, false otherwise" />
      <item value="touchModal – true to sent all outside touches to this window, false to other windows behind it" />
      <item value="Indicates whether the popup window supports splitting touches. Returns: true if the touch splitting is enabled, false otherwise" />
      <item value="Set whether this window is touch modal or if outside touches will be sent to other windows behind it." />
      <item value="Indicates whether the popup window will be forced into using absolute screen coordinates for positioning." />
      <item value="ndicates whether the popup is showing above (the y coordinate of the popup's bottom is less than the y coordinate of the anchor) or below the anchor view (the y coordinate of the popup is greater than y coordinate of the anchor's bottom). The value returned by this method is meaningful only after showAsDropDown(View) or showAsDropDown(View, int, int) was invoked." />
      <item value="Mode for setInputMethodMode(int): this popup always needs to work with an input method, regardless of whether it is focusable. This means that it will always be displayed so that the user can also operate the input method while it is shown." />
      <item value="Control how the popup operates with an input method: one of INPUT_METHOD_FROM_FOCUSABLE, INPUT_METHOD_NEEDED, or INPUT_METHOD_NOT_NEEDED." />
      <item value="overlapAnchor – Whether the popup should overlap its anchor." />
      <item value="Sets whether the popup window should overlap its anchor view when displayed as a drop-down. If the popup is showing, calling this method will take effect only the next time the popup is shown." />
      <item value="Sets whether the popup window should overlap its anchor view when displayed as a drop-down. Params: overlapAnchor – Whether the popup should overlap its anchor." />
      <item value="orientation" />
      <item value="Sites" />
      <item value="has no zero argument constructor" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1933" />
        <entry key="ENGLISH" value="1934" />
        <entry key="CHINESE_TRADITIONAL" value="6" />
        <entry key="RUSSIAN" value="4" />
        <entry key="FRENCH" value="2" />
        <entry key="HAITIAN_CREOLE" value="1" />
        <entry key="KOREAN" value="11" />
        <entry key="DUTCH" value="1" />
        <entry key="CATALAN" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="SPANISH" value="3" />
        <entry key="ITALIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1652672785641" />
  </component>
</application>