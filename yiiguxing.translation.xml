<application>
  <component name="AppStorage">
    <histories>
      <item value="Sets the camera up to take preview images which are used for both preview and decoding. We detect the preview format here so that buildLuminanceSource() can build an appropriate LuminanceSource subclass. In the future we may want to force YUV420SP as it's the smallest, and the planar Y can be used for barcode scanning without a copy in some cases." />
      <item value="Resolution" />
      <item value="This is a hack to turn the flash off on the Samsung Galaxy. // And this is a hack-hack to work around a different value on the Behold II // Restrict Behold II check to Cupcake, per Samsung's advice //if (Build.MODEL.contains(&quot;Behold II&quot;) &amp;&amp;" />
      <item value="SHARPNESS" />
      <item value="this is ignored, this value is set automatically when needed. */" />
      <item value="Opens the camera driver and initializes the hardware parameters." />
      <item value="Closes the camera driver if still in use." />
      <item value="caused by encoding method-get params your local changes would be overwritten by cherry-pick. hint: commit your changes or stash them to proceed. cherry-pick failed" />
      <item value="Invalid sign" />
      <item value="Analyze" />
      <item value="Folder" />
      <item value="Template" />
      <item value="Set the TextView so that when it takes focus, all the text is * selected." />
      <item value="Set a special listener to be called when an action is performed * on the text view. This will be called when the enter key is pressed, * or when an action supplied to the IME is selected by the user. Setting * this means that the normal hard key event will not insert a newline * into the text view, even if it is multi-line; holding down the ALT * modifier will, however, allow the user to insert a newline character." />
      <item value="all Name" />
      <item value="subordinates" />
      <item value="subclass which may observe other {@code LiveData} objects and react on * {@code OnChanged} events from them." />
      <item value="path Separator" />
      <item value="separator" />
      <item value="联调" />
      <item value="the length of the window of time that must pass after the emission of an item from the source * ObservableSource in which that ObservableSource emits no items in order for the item to be emitted by the * resulting ObservableSource" />
      <item value="Returns an Observable that emits records of the time interval between consecutive items emitted by the * source ObservableSource." />
      <item value="Returns an Observable that mirrors the source ObservableSource, except that it drops items emitted by the * source ObservableSource that are followed by newer items before a timeout value expires on a specified * Scheduler. The timer resets on each emission." />
      <item value="Returns an Observable that mirrors the source ObservableSource, except that it drops items emitted by the * source ObservableSource that are followed by newer items before a timeout value expires. The timer resets on * each emission (alias to {@link #debounce(long, TimeUnit, Scheduler)})." />
      <item value="throttle" />
      <item value="an Observable that emits only the first {@code count} items emitted by the source ObservableSource, or * all of the items from the source ObservableSource if that ObservableSource emits fewer than {@code count} items" />
      <item value="Returns an Observable that emits only the first {@code count} items emitted by the source ObservableSource. If the source emits fewer than * {@code count} items then all of its items are emitted." />
      <item value="Returns an Observable that mirrors the source ObservableSource but applies a timeout policy for each emitted * item. If the next item isn't emitted within the specified timeout duration starting from its predecessor, * the resulting ObservableSource terminates and notifies observers of a {@code TimeoutException}." />
      <item value="FORTIFY: FD_SET: file descriptor 1028 &gt;= FD_SETSIZE 1024" />
      <item value="Fatal signal 6 (SIGABRT), code -1 (SI_QUEUE) in tid 26850 (Thread-55), pid 26134 (ice_join_config)" />
      <item value="deploy" />
      <item value="重构" />
      <item value="Saves no data to cache." />
      <item value="Caches remote data with both {@link #DATA} and {@link #RESOURCE}, and local data with {@link * #RESOURCE} only." />
      <item value="Writes retrieved data directly to the disk cache before it's decoded." />
      <item value="Writes resources to disk after they've been decoded." />
      <item value="Tries to intelligently choose a strategy based on the data source of the {@link * com.bumptech.glide.load.data.DataFetcher} and the {@link * com.bumptech.glide.load.EncodeStrategy} of the {@link com.bumptech.glide.load.ResourceEncoder} * (if an {@link com.bumptech.glide.load.ResourceEncoder} is available)." />
      <item value="Start the target Fragment and pop itself" />
      <item value="If you want to begin another FragmentTransaction immediately after popTo(), use this method." />
      <item value="the period of time each buffer collects items before it is emitted and replaced with a new * buffer" />
      <item value="Kettle" />
      <item value="No Such Method Error" />
      <item value="artifact" />
      <item value="artifact Id" />
      <item value="inner" />
      <item value="{@link Handler} to specify the thread upon which the callback will be invoked." />
      <item value="The {@link NetworkCallback} to be utilized for this request. Note * the callback must not be shared - it uniquely specifies this request. * The callback is invoked on the default internal Handler." />
      <item value="Determines if the specified {@code Object} is assignment-compatible * with the object represented by this {@code Class}. This method is * the dynamic equivalent of the Java language {@code instanceof} * operator. The method returns {@code true} if the specified * {@code Object} argument is non-null and can be cast to the * reference type represented by this {@code Class} object without * raising a {@code ClassCastException.} It returns {@code false} * otherwise." />
      <item value="Determines if the specified {@code Class} object represents an * interface type." />
      <item value="is Assignable From" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1449" />
        <entry key="ENGLISH" value="1450" />
        <entry key="FRENCH" value="1" />
        <entry key="KOREAN" value="92" />
        <entry key="KURDISH" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="SPANISH" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>